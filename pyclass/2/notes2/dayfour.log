Python 2.7.11 (v2.7.11:6d1b6a68f775, Dec  5 2015, 12:54:16) 
[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin
Type "copyright", "credits" or "license()" for more information.
>>> 

>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======

Traceback (most recent call last):
  File "/Users/raymond/Dropbox/Public/sj139/pubsub_session.py", line 3, in <module>
    post_message('raymond', 'python is the best')
TypeError: post_message() takes exactly 3 arguments (2 given)
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[('raymond', 'python is the best', 1459442668.768168)]
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[('raymondh', '#python is the best', 1459442879.46455),
 ('davin', 'teaching #python today', 1459442879.464553),
 ('raymondh', '#python news:  pypy5.0 released today', 1459442879.464554),
 ('barry', 'it is fun to use #emacs', 1459442879.464556),
 ('davin', '@barry no, no #vi rocks', 1459442879.464556),
 ('barry', '@davin but #emacs can do anything', 1459442879.464558),
 ('davin', '@barry but it turns my fingers into knots', 1459442879.464559)]
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[('raymondh', '#python is the best', 1459442970.358599),
 ('davin', 'teaching #python today', 1459442970.358602),
 ('raymondh', '#python news:  pypy5.0 released today', 1459442970.358603),
 ('barry', 'it is fun to use #emacs', 1459442970.358604),
 ('davin', '@barry no, no #vi rocks', 1459442970.358604),
 ('barry', '@davin but #emacs can do anything', 1459442970.358606),
 ('davin', '@barry but it turns my fingers into knots', 1459442970.358607),
 ('raymondh', '#python tip: always use namedtuples', 1459442970.358608),
 ('davin',
  '#funfact:  coriander and cilantro come from the same plant',
  1459442970.358609)]
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='raymondh', text='#python is the best', timestamp=1459443078.295184),
 Post(user='davin', text='teaching #python today', timestamp=1459443078.29519),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459443078.295193),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459443078.295194),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459443078.295195),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459443078.295198),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459443078.295199),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459443078.295201),
 Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459443078.295202)]
>>> posts[0].user
'raymondh'
>>> posts[0].text
'#python is the best'
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='raymondh', text='#python is the best', timestamp=1459443133.315083),
 Post(user='davin', text='teaching #python today', timestamp=1459443133.315089),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459443133.31509)]
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459443159.053365),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459443159.053365),
 Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459443159.053366)]
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459443181.853655),
 Post(user='davin', text='teaching #python today', timestamp=1459443181.853653),
 Post(user='raymondh', text='#python is the best', timestamp=1459443181.853648)]
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459443190.339955),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459443190.339953),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459443190.339951),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459443190.33995),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459443190.339947),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459443190.339945),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459443190.339943),
 Post(user='davin', text='teaching #python today', timestamp=1459443190.33994),
 Post(user='raymondh', text='#python is the best', timestamp=1459443190.339933)]
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
deque([Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459443266.444976), Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459443266.444975), Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459443266.444974), Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459443266.444972), Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459443266.444971), Post(user='barry', text='it is fun to use #emacs', timestamp=1459443266.44497), Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459443266.444969), Post(user='davin', text='teaching #python today', timestamp=1459443266.444968), Post(user='raymondh', text='#python is the best', timestamp=1459443266.444963)])
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459443276.377254),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459443276.377252),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459443276.377251),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459443276.377249),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459443276.377247),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459443276.377245),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459443276.377244),
 Post(user='davin', text='teaching #python today', timestamp=1459443276.377242),
 Post(user='raymondh', text='#python is the best', timestamp=1459443276.377235)]
>>> 
>>> 
>>> 
>>> 'hello' and 'world'
'world'
>>> 'hello' and ''
''
>>> '' and 'world'
''
>>> None or 1234
1234
>>> 0 or 1234
1234
>>> 50 or 1234
50
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459443452.780636),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459443452.780635),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459443452.780633),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459443452.780631),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459443452.78063),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459443452.780628),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459443452.780627),
 Post(user='davin', text='teaching #python today', timestamp=1459443452.780625),
 Post(user='raymondh', text='#python is the best', timestamp=1459443452.780618)]
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459444152.310302),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459444152.310301),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459444152.3103),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459444152.310299),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459444152.310298),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459444152.310297),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459444152.310295),
 Post(user='davin', text='teaching #python today', timestamp=1459444152.310294),
 Post(user='raymondh', text='#python is the best', timestamp=1459444152.310288)]
[('davin', 'raymondh'), ('davin', 'barry')]
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======

Traceback (most recent call last):
  File "/Users/raymond/Dropbox/Public/sj139/pubsub_session.py", line 14, in <module>
    follow('davin', followed_user='raymondh')
  File "/Users/raymond/Dropbox/Public/sj139/pubsub.py", line 18, in follow
    following[user].append(followed_user)
KeyError: 'davin'
>>> following
{}
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459444559.408728),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459444559.408726),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459444559.408725),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459444559.408723),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459444559.408721),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459444559.40872),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459444559.408718),
 Post(user='davin', text='teaching #python today', timestamp=1459444559.408716),
 Post(user='raymondh', text='#python is the best', timestamp=1459444559.408709)]
{'davin': ['raymondh', 'barry']}
>>> # [ (user, followed_user), ...]
>>> # user -> followers
>>> # user -> followed
>>> 
>>> list()
[]
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459444758.948901),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459444758.9489),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459444758.948898),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459444758.948897),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459444758.948895),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459444758.948893),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459444758.948892),
 Post(user='davin', text='teaching #python today', timestamp=1459444758.94889),
 Post(user='raymondh', text='#python is the best', timestamp=1459444758.948883)]
defaultdict(<type 'list'>, {'davin': ['raymondh', 'barry']})
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459444774.382828),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459444774.382827),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459444774.382826),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459444774.382825),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459444774.382824),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459444774.382823),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459444774.382822),
 Post(user='davin', text='teaching #python today', timestamp=1459444774.382821),
 Post(user='raymondh', text='#python is the best', timestamp=1459444774.382817)]
{'davin': ['raymondh', 'barry']}
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459444835.02056),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459444835.020559),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459444835.020558),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459444835.020557),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459444835.020556),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459444835.020555),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459444835.020554),
 Post(user='davin', text='teaching #python today', timestamp=1459444835.020553),
 Post(user='raymondh', text='#python is the best', timestamp=1459444835.020549)]
{'davin': ['raymondh', 'barry']}
{'barry': ['davin'], 'raymondh': ['davin']}
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459444916.508578),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459444916.508577),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459444916.508575),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459444916.508574),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459444916.508572),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459444916.50857),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459444916.508569),
 Post(user='davin', text='teaching #python today', timestamp=1459444916.508567),
 Post(user='raymondh', text='#python is the best', timestamp=1459444916.508561)]
{'davin': ['raymondh', 'barry', 'barry']}
{'barry': ['davin', 'davin'], 'raymondh': ['davin']}
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459444964.050539),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459444964.050538),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459444964.050537),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459444964.050536),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459444964.050535),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459444964.050534),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459444964.050533),
 Post(user='davin', text='teaching #python today', timestamp=1459444964.050532),
 Post(user='raymondh', text='#python is the best', timestamp=1459444964.050528)]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
>>> 
>>> 
>>> does = 'davin'
>>> follow = 'raymond'
>>> following[does]
set(['barry', 'raymondh'])
>>> follow in following[does]
False
>>> 'raymondh'in following[does]
True
>>> '\x1E'
'\x1e'
>>> 0x1F
31
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======

Traceback (most recent call last):
  File "/Users/raymond/Dropbox/Public/sj139/pubsub_session.py", line 1, in <module>
    from pubsub import *
  File "/Users/raymond/Dropbox/Public/sj139/pubsub.py", line 30
    def set_user(user, email, password, displayname=None, bio=None, photo=None, joined=None)
                                                                                           ^
SyntaxError: invalid syntax
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======

Traceback (most recent call last):
  File "/Users/raymond/Dropbox/Public/sj139/pubsub_session.py", line 5, in <module>
    bio = 'Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman')
  File "/Users/raymond/Dropbox/Public/sj139/pubsub.py", line 33, in set_user
    hashed_password = hash_password(user, email, joined, password)
  File "/Users/raymond/Dropbox/Public/sj139/pubsub.py", line 27, in hash_password
    result = hashlib.md5(result + str(i)).hexdigest()      # XXX change to digest() change to sha256
NameError: global name 'hashlib' is not defined
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459446911.895244),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459446911.895235),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459446911.895234),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459446911.895233),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459446911.895232),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459446911.895231),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459446911.89523),
 Post(user='davin', text='teaching #python today', timestamp=1459446911.895229),
 Post(user='raymondh', text='#python is the best', timestamp=1459446911.895225)]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='907f91063ae9ffee9f1cd1deb176e8ee', joined=1459446911.893628, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='1b991f76c473a4e4046953066a42f1ac', joined=1459446911.891824, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname=None, email='python@rcn.com', hashed_password='ce38def47d5b129af16beb39900b390e', joined=1459446911.889835, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459447002.418218),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459447002.418217),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459447002.418216),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459447002.418215),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459447002.418214),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459447002.418213),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459447002.418212),
 Post(user='davin', text='teaching #python today', timestamp=1459447002.418211),
 Post(user='raymondh', text='#python is the best', timestamp=1459447002.418209)]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='8c06814e8da88d762da18cf236c10661', joined=1459447002.416618, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='d818129a9d395eb6f74a5af4d92a3075', joined=1459447002.414871, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='raymondh', email='python@rcn.com', hashed_password='83bbd5cc7c8f19538ec82667b7d6d21f', joined=1459447002.412971, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459447065.167145),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459447065.167144),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459447065.167143),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459447065.167142),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459447065.167141),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459447065.16714),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459447065.167139),
 Post(user='davin', text='teaching #python today', timestamp=1459447065.167138),
 Post(user='raymondh', text='#python is the best', timestamp=1459447065.167136)]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\x88\xb2\x9aM\xc1\x110\xaaR\x1aysAKi\x11', joined=1459447065.165639, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='t\x85\xa9+>73\x9a\x90\x8c\xdaV9\xb5\x8c}', joined=1459447065.164007, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='\xc0\xa3on.X\xee\xdaT\x90\x14\xc6\x9bA\x10\x8d', joined=1459447065.162222, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459447135.123724),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459447135.123723),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459447135.123721),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459447135.12372),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459447135.123719),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459447135.123719),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459447135.123718),
 Post(user='davin', text='teaching #python today', timestamp=1459447135.123717),
 Post(user='raymondh', text='#python is the best', timestamp=1459447135.12371)]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\x96;\xf8\x10,\xfd\x11\xf8\x93U\xf8z\x1b\xaa\x04\xca\xec\xd5\\\x0b\xdel3\xb0\xccP\xf2\x81t\xed8\x9a', joined=1459447135.107767, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='e?\x00\x1el\xc4\x85/\xa5\xc6X\xff\x8a\xea:\x13\xe0B\xf4I\xdfn>;\xf2\xf2\xb1\x1c@\x07c=', joined=1459447135.089215, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='\x9ei8P\xa7\x00V\x16ed:y\x9cv\xcd\xf8i(\x8e\xf2\xb2h\x81?\x11\xd1\xfb\x1f\xc9\xae\x92\xde', joined=1459447135.071789, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459447626.740878),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459447626.740875),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459447626.740874),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459447626.740874),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459447626.740873),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459447626.740872),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459447626.740871),
 Post(user='davin', text='teaching #python today', timestamp=1459447626.740868),
 Post(user='raymondh', text='#python is the best', timestamp=1459447626.740863)]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\xb0Q1h\x1d]\xe1\xfc\x8e\nD2\xbf\xd2\x01\x0e\x0c\xd3S\x8f5\x81\xe0\xbdL\xbe\x96\xbfN\x0c\x94\x93', joined=1459447626.724206, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='_Go7G\xf0\xe7\xc9\x13\xe1\x85\xffd^\x00X\x94\xbb\t&\n8\xa9w\xa0\xb2\x9f\x8d\xc2 \xbbU', joined=1459447626.708278, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='-\xf5\xb8%\x99\x86\x1f(\x927\x10S\xc3\xe0\xe7Px\xbb\x864\xce\x13\xbb\xa1\x05\xff\x8b\x05\x15%\x92>', joined=1459447626.692383, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======

Traceback (most recent call last):
  File "/Users/raymond/Dropbox/Public/sj139/pubsub_session.py", line 5, in <module>
    bio = 'Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman')
  File "/Users/raymond/Dropbox/Public/sj139/pubsub.py", line 39, in set_user
    validate_strong(password)
  File "/Users/raymond/Dropbox/Public/sj139/pubsub.py", line 36, in validate_strong
    raise ValueError('Must be at least 6 letters, upper and lowercase with digits')
ValueError: Must be at least 6 letters, upper and lowercase with digits
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459447751.548888),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459447751.548887),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459447751.548886),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459447751.548885),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459447751.548884),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459447751.548884),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459447751.548883),
 Post(user='davin', text='teaching #python today', timestamp=1459447751.54888),
 Post(user='raymondh', text='#python is the best', timestamp=1459447751.548876)]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='Q\xeaU\x93\xd8\xfc\xee\xdeRd\x1e<\xd8\xc3\xd7\xa1$\xf9\xa5\x96Q\xb4\xf1\xad\xf5jE)\x9b\xe7t}', joined=1459447751.531206, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='j\xf0\xb3Px$\xa5\xda\xc0B+\xa6K\x95\xbb!\r:\xdfj\xd3\xab_\x1cn\xc0X\xdfE\x9e\xfa\x04', joined=1459447751.515892, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password="\xca\x01\xe6\x9cA\x98\xb6'\tf^}\xd0\x85\x0bGBw\x18<\xa8ke\x12\xa0H\x10\xecDB\xddW", joined=1459447751.497995, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459447772.824235),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459447772.824234),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459447772.824233),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459447772.824026),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459447772.824025),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459447772.824025),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459447772.824024),
 Post(user='davin', text='teaching #python today', timestamp=1459447772.824023),
 Post(user='raymondh', text='#python is the best', timestamp=1459447772.824019)]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='p\xe0r\xc7 :\xa7L\xcd0\xe4\xb4\xdb[\r\xeazG\xf5\x9c\x02%:@n\xf96\xc0\xe6\xae\xcdT', joined=1459447772.807875, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='\xe2Vg[JI\xe4\x01]\x81\xe5\x1f\xf6u\x01m\x88:\xd1\xa8\xf5\xed\xc3\xb3\xeaiG+\xden\xe0\xfe', joined=1459447772.79268, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password=']\xf5\xb6\n\xe7\xbf\xe3\x19\xc7\xe82 ^\xa0\x9b\xfd\x00%\xba\x16\xedT\xa8rQ\xf2\x055K\xc6l\xcb', joined=1459447772.776145, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459448679.840923),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459448679.840922),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459448679.840921),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459448679.84092),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459448679.840919),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459448679.840919),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459448679.840918),
 Post(user='davin', text='teaching #python today', timestamp=1459448679.840915),
 Post(user='raymondh', text='#python is the best', timestamp=1459448679.84091)]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\xbc\x9b\x82\x84\xd4\x9f\x16hL\x08z7\xf3qW{l\xfc\xeeH\xcf\x06~\xf2=\xafCI#\x03wC', joined=1459448679.821788, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='\xb1W\xb1\xdc\x06\xc3AC\xadl\x9b{%\x02\xb6\x93\xdce\xb5\xb5\x00\xa3\x97\xfd\x0b\xbe\x07\x1a>\xc6Y\xc2', joined=1459448679.806139, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='\xe1\rR\xc0\x150\x08HN\xfc+\x99eR\x93Og\x9d\xe07\xc5+\xb2t;>7\xe1\xb6?\xc5\xc5', joined=1459448679.788321, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======

Traceback (most recent call last):
  File "/Users/raymond/Dropbox/Public/sj139/pubsub_session.py", line 24, in <module>
    validate_user('raymond', 'superman123')
  File "/Users/raymond/Dropbox/Public/sj139/pubsub.py", line 46, in validate_user
    info = users[user]
KeyError: 'raymond'
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======

Traceback (most recent call last):
  File "/Users/raymond/Dropbox/Public/sj139/pubsub_session.py", line 24, in <module>
    validate_user('raymondh', 'superman123')
  File "/Users/raymond/Dropbox/Public/sj139/pubsub.py", line 49, in validate_user
    raise ValueError('Password not matched')
ValueError: Password not matched
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459448762.856524),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459448762.856523),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459448762.856522),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459448762.856522),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459448762.856521),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459448762.856521),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459448762.85652),
 Post(user='davin', text='teaching #python today', timestamp=1459448762.856519),
 Post(user='raymondh', text='#python is the best', timestamp=1459448762.856517)]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\x96a\xc0|\x16\xebA\x8cG\x06\\\x97\x06Ges\xa5\x8c\xb5\xf2\x14\xf3\xd9\x80\x0b\x8dp\x99C\xc3\xf9\x05', joined=1459448762.842309, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='\x07k\xb6\xb04\xd3lc\xc7\xba_\'M\xcfoV\xca3\x89\x90\xb5\xbf4.Kr}"\xe4\x8eP\x0b', joined=1459448762.828218, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='\xbe~\xba\x1e5\xf5\xb3\xbd\xe6\xddn\xf6\xa6\xb7\\\xe6%um\xed\x8c\xc0\xf8\x9e\xa3\x03\xf4\x99\x1b\x98\xa50', joined=1459448762.811787, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459448828.309012),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459448828.309011),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459448828.30901),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459448828.309009),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459448828.309008),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459448828.309007),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459448828.309007),
 Post(user='davin', text='teaching #python today', timestamp=1459448828.309004),
 Post(user='raymondh', text='#python is the best', timestamp=1459448828.309)]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\xbe\x06A(s\xc72\x04o85\xb2\xb8Z\xe6=\x18\xc4Jq="E\xa0]\x86aj\xba]\xa1\xea', joined=1459448828.293534, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='v\x16\x81\xde\xc6S@<\x1c\xb6e\x19\xf0$\x1dy\x04t\x97\x99\xa8\rv\x80\x93\xda\xda\xb8r\x15\x088', joined=1459448828.279476, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='6\x03\x97\x86>\x1as\xa8\xa0\xbbR\xfd[\xf4b\xf4<\x87\xdf\x05<\x07th\xd5\x85\x92\xae\x05=\xffW', joined=1459448828.309025, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========

Traceback (most recent call last):
  File "/Users/raymond/Dropbox/Public/sj139/pubsub.py", line 59, in <module>
    import pubsub_session
  File "/Users/raymond/Dropbox/Public/sj139/pubsub_session.py", line 27, in <module>
    validate_user('raymondh', 'Batman456')
  File "/Users/raymond/Dropbox/Public/sj139/pubsub.py", line 56, in validate_user
    raise ValueError('Password not matched')
ValueError: Password not matched
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459449313.837336),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459449313.837335),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459449313.837334),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459449313.837332),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459449313.837331),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459449313.83733),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459449313.83733),
 Post(user='davin', text='teaching #python today', timestamp=1459449313.837329),
 Post(user='raymondh', text='#python is the best', timestamp=1459449313.837324)]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\xb4|\x9e\x80\xf0\x96\xaf\xb7\xdfr\xc3\xd9\xec\x98\xaa\x1cbA\xc5U\x19\xbb\n;1W\x98r7\xa2q\x9d', joined=1459449313.820151, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='\xbf9\x1c\xf6\xbeO\xd9\xea\xb0\x1bkr\xd0\xf0Pk\x11\xae\xdc\xe3\xe2\xfb\x11\xb9\xd2\xf1\x9d\x84\xda\xbeUa', joined=1459449313.804459, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='r\x1f\xb0f\x9e\xea\x89\xc2\x19\x91\xaa\xd9\xf6w\x07\xf0\x1a\xb7\x8b\x03l\x11<\x1e]^q\x96\x8b3\x99A', joined=1459449313.783562, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459449313.837335),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459449313.83733),
 Post(user='raymondh', text='#python is the best', timestamp=1459449313.837324)]
>>> 
>>> 
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459449360.30341),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459449360.303403),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459449360.303402),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459449360.303401),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459449360.303399),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459449360.303398),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459449360.303397),
 Post(user='davin', text='teaching #python today', timestamp=1459449360.303396),
 Post(user='raymondh', text='#python is the best', timestamp=1459449360.303391)]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password="\xe6\xe6\x95\xfc5\x0c\xab\xc3\x93\x17\xa1R\xd6\xfeY\xf4}\xe0OY\xef\xaan\xcb'Ox\x08A\x9d\xef<", joined=1459449360.286344, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='\xd8.\x83\xafL\xab%\x88\xcd,\xf3+\xb5\xc7\xe5%V+n\xf2\x9cC\x14\xde#\xa5r\xd0\xf8\xd0\x0e\xaf', joined=1459449360.271799, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='f\x96.|\x9d\xaeV%[L7~\xc9\x00w\x83vUh\x83[H\xe1?#M\xf7\x08g\xe2\xb5\xb2', joined=1459449360.255142, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459449360.303403),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459449360.303397),
 Post(user='raymondh', text='#python is the best', timestamp=1459449360.303391)]
>>> 
>>> 
>>> import itertools
>>> it = itertools.islice('abcde', 3)
>>> next(it)
'a'
>>> next(it)
'b'
>>> next(it)
'c'
>>> next(it)

Traceback (most recent call last):
  File "<pyshell#36>", line 1, in <module>
    next(it)
StopIteration
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========

Traceback (most recent call last):
  File "/Users/raymond/Dropbox/Public/sj139/pubsub.py", line 60, in <module>
    import pubsub_session
  File "/Users/raymond/Dropbox/Public/sj139/pubsub_session.py", line 13, in <module>
    post_message('raymondh', '#python is the best')
  File "/Users/raymond/Dropbox/Public/sj139/pubsub.py", line 20, in post_message
    users_posts[user].appendleft(post)
NameError: global name 'users_posts' is not defined
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459449706.444517),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459449706.444516),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459449706.444515),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459449706.444514),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459449706.444513),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459449706.444512),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459449706.444511),
 Post(user='davin', text='teaching #python today', timestamp=1459449706.444509),
 Post(user='raymondh', text='#python is the best', timestamp=1459449706.4445)]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\x8bi\t\xf2\xea\x17\xd7\xef\x94\x15\x15\xf4\xdb\xdd\x80\x88\x00\xb3\x81nU\x80\x16\xb6\x85x\x03\xc6\xbe\x139:', joined=1459449706.429816, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='KI\xacl~\xd3 \xfb9\xb8!A\x1f\xa9\x9b7aM\x86\x1b\xdc(\xc5\xe5k\x91\xc3N3\xe4=\xc0', joined=1459449706.414656, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='([0\xa4\x92m\x88\xab:\x02\x11\xf5\xe9J\x97\xfbc\xd0\x99p\xf1\xbf\xa1\x02\xfelH\xfb\x1e$\xc5\xf8', joined=1459449706.397603, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459449706.444516),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459449706.444511),
 Post(user='raymondh', text='#python is the best', timestamp=1459449706.4445)]
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459449804.701158),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459449804.701157),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459449804.701156),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459449804.701155),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459449804.701154),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459449804.701151),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459449804.70115),
 Post(user='davin', text='teaching #python today', timestamp=1459449804.701149),
 Post(user='raymondh', text='#python is the best', timestamp=1459449804.70114)]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='5#\xe2(a\xa4\xab\x91l\x08\x90\xd6\xf9\xf4\xbd\xeaXB\xe4\x1bT\x15\x9b\x14\xa7k\x13\xa2[Q]Z', joined=1459449804.682867, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='0\x92\x02\x1a%KJ\xbc\xcf\xfa3\n\x8e\xb4{\xc6\x99\x03\x94\xa6\xc5\x9b_\x13{lQ\x11\xed\xaf\xb1\xc8', joined=1459449804.667711, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='S\xca\xe2\xb3\xba\xc39\xa2\x04\x98\xf0\xd1\xcc\x8b/\xc3\x94\xa8\xdb"\xad\x9c:\xcd\x97\x1e\xe7\xd7k\x9e\xc0%', joined=1459449804.651045, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}

Traceback (most recent call last):
  File "/Users/raymond/Dropbox/Public/sj139/pubsub.py", line 58, in <module>
    import pubsub_session
  File "/Users/raymond/Dropbox/Public/sj139/pubsub_session.py", line 37, in <module>
    pprint(posts_by_user('raymondh'))
  File "/Users/raymond/Dropbox/Public/sj139/pubsub.py", line 24, in posts_by_user
    return list(islice(user_posts[user], limit))
NameError: global name 'islice' is not defined
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459449846.611984),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459449846.611982),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459449846.611982),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459449846.611981),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459449846.61198),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459449846.611976),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459449846.611975),
 Post(user='davin', text='teaching #python today', timestamp=1459449846.611974),
 Post(user='raymondh', text='#python is the best', timestamp=1459449846.611965)]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password="\x1c\x0c0\x7f+NN\xb98\x80;\x82\xe7I\xcbT]'\xcb\x85\x02mB8y\xe3\x07\x1e)\x97l5", joined=1459449846.595869, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='R1\xcd\xae\x9b\xb1\xb1?5\xb8|\xe6\x15\xab\xc9Mqa\xb3\xd8\xb0\x0b\xb8\xfb\xbdD\xc7I+|\xe4\xaf', joined=1459449846.579101, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='\x86\x1d\xa4f=\xc3\x8c9\xd3\x980\x8a\xea\xdc\x80\x06\x1enRm\x04$\xb3\xc2\xc4ZN:d\xea\xb7D', joined=1459449846.561086, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459449846.611982),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459449846.611975),
 Post(user='raymondh', text='#python is the best', timestamp=1459449846.611965)]
>>> 
>>> 
>>> 
>>> islice([10, 20, 30, 40, 50], 3)
<itertools.islice object at 0x105266628>
>>> it = islice([10, 20, 30, 40, 50], 3)
>>> next(it)
10
>>> next(it)
20
>>> next(it)
30
>>> next(it)

Traceback (most recent call last):
  File "<pyshell#45>", line 1, in <module>
    next(it)
StopIteration
>>> it = islice(deque([10, 20, 30, 40, 50]), 3)
>>> next(it)
10
>>> list(islice(deque([10, 20, 30, 40, 50]), 3))
[10, 20, 30]
>>> user = 'raymondh
SyntaxError: EOL while scanning string literal
>>> user = 'raymondh'
>>> s = 'ray'
>>> t = s + 'mondh'
>>> user
'raymondh'
>>> t
'raymondh'
>>> user == t
True
>>> user is t
False
>>> 
>>> 
>>> t = intern(t)
>>> user = intern(user)
>>> t
'raymondh'
>>> user
'raymondh'
>>> user == t
True
>>> user is t
True
>>> following['davin']
set([])
>>> following['raymondh']
set([])
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459450530.478202),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459450530.4782),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459450530.478199),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459450530.478198),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459450530.478197),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459450530.478196),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459450530.478193),
 Post(user='davin', text='teaching #python today', timestamp=1459450530.478191),
 Post(user='raymondh', text='#python is the best', timestamp=1459450530.478182)]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\x13\x05\xb9\xa6A{k/\xbaPp\xc0(\xef\x82\xdb~/\xd4\x9a\x95\x95\xa9\xde\x81\xa2\xa4\xe9\xb8\x83\x97\x84', joined=1459450530.459468, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='t\xc3\xf6\xe1\xdb\xa4\xa0W\x0b\xd3\xa0\xfb\x8bB\xbf\x15\xa8\xd5r\x82w\xed!\x01\xbc\t\x8e\x0b\xd9r9d', joined=1459450530.444538, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='\xea\xa7+\xf9?z\xc7\x16\x8b6e\x8er\x0c\x9b\x8f\xe7\xe9\xe0\xa97/-\xcb\x9fo8\xca~\xbc\x08\x93', joined=1459450530.427658, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459450530.4782),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459450530.478193),
 Post(user='raymondh', text='#python is the best', timestamp=1459450530.478182)]
>>> following['raymondh']
set([])
>>> following
defaultdict(<type 'set'>, {'davin': set(['barry', 'raymondh']), 'raymondh': set([])})
>>> followers
defaultdict(<type 'set'>, {'barry': set(['davin']), 'raymondh': set(['davin'])})
>>> followers['raymondh']
set(['davin'])
>>> following['davin']
set(['barry', 'raymondh'])
>>> 
>>> for followed_user in following['davin']:
	print user_posts[followed_user]

	
deque([Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459450530.478198), Post(user='barry', text='it is fun to use #emacs', timestamp=1459450530.478196)])
deque([Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459450530.4782), Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459450530.478193), Post(user='raymondh', text='#python is the best', timestamp=1459450530.478182)])
>>> for followed_user in following['davin']:
	for post in user_posts[followed_user]:
		print post.user, post.text

		
barry @davin but #emacs can do anything
barry it is fun to use #emacs
raymondh #python tip: always use namedtuples
raymondh #python news:  pypy5.0 released today
raymondh #python is the best
>>> # [10, 20, 30]   [15, 25, 35]   [11, 27, 22] -> [10, 11, 15, 20, 22, 25, 27, 30, 35]
>>> #                                             ^-- merging
>>> from heapq import merge
>>> it = merge([10, 20, 30], [15, 25, 35], [11, 27, 22])
>>> list(it)
[10, 11, 15, 20, 25, 27, 22, 30, 35]
>>> it = merge([10, 20, 30], [15, 25, 35], [11, 27, 22])
>>> next(it)
10
>>> next(it)
11
>>> it = merge([10, 20, 30], [15, 25, 35], [11, 27, 22])
>>> list(islice, it, 5)

Traceback (most recent call last):
  File "<pyshell#88>", line 1, in <module>
    list(islice, it, 5)
TypeError: list() takes at most 1 argument (3 given)
>>> list(islice(it, 5))
[10, 11, 15, 20, 25]
>>> # merge is O(n) vs sort which O(n log n)
>>> # merge gains speed by taking advantage of the previously sorted inputs
>>> # merge returns an iterator rather than making a list all at once
>>> # islice takes an iterator and gives you the first n values
>>> # list turns an iterator into list
>>> list(islice(merge([10, 20, 30], [15, 25, 35], [11, 27, 22]), 5))
[10, 11, 15, 20, 25]
>>> def f(a, b, c):
	print a, b, c

	
>>> s = [10, 20, 30]
>>> f(s)

Traceback (most recent call last):
  File "<pyshell#100>", line 1, in <module>
    f(s)
TypeError: f() takes exactly 3 arguments (1 given)
>>> f(*s)
10 20 30
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(user='davin', text='#funfact:  coriander and cilantro come from the same plant', timestamp=1459451301.056386),
 Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459451301.056378),
 Post(user='davin', text='@barry but it turns my fingers into knots', timestamp=1459451301.056377),
 Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459451301.056376),
 Post(user='davin', text='@barry no, no #vi rocks', timestamp=1459451301.056375),
 Post(user='barry', text='it is fun to use #emacs', timestamp=1459451301.056374),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459451301.056371),
 Post(user='davin', text='teaching #python today', timestamp=1459451301.056369),
 Post(user='raymondh', text='#python is the best', timestamp=1459451301.05636)]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='!\xf9\x98\xf0\x9d\x89\xb7\xa2]F\x94\xe4\x15)\xaf\xc4\x97*\x06=Q\x00\xab\x93\x10c*\xaa\x02c\xa0\xdd', joined=1459451301.039062, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password="|\xd3\xafY\x12\x8c\xd1{\xec\xac\xf6\x0e\xa1\x9a'\x87 \xa0\x95\xce\x11\xad\xaa\xf5\x81l\xc2\xfd0_M\xff", joined=1459451301.023108, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='f\xbc\xc4;ii5!\xf8M[W\xeeINI\xb1\xd8\xc8\xdc\xbc\xae\x0c\xfck\x03\x06Fbp\x89}', joined=1459451301.006409, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459451301.056378),
 Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459451301.056371),
 Post(user='raymondh', text='#python is the best', timestamp=1459451301.05636)]
>>> posts_from_user('davin')

Traceback (most recent call last):
  File "<pyshell#102>", line 1, in <module>
    posts_from_user('davin')
NameError: name 'posts_from_user' is not defined
>>> posts_for_user('davin')
[Post(user='barry', text='@davin but #emacs can do anything', timestamp=1459451301.056376), Post(user='barry', text='it is fun to use #emacs', timestamp=1459451301.056374), Post(user='raymondh', text='#python tip: always use namedtuples', timestamp=1459451301.056378), Post(user='raymondh', text='#python news:  pypy5.0 released today', timestamp=1459451301.056371), Post(user='raymondh', text='#python is the best', timestamp=1459451301.05636)]
>>> help(merge)
Help on function merge in module heapq:

merge(*iterables)
    Merge multiple sorted inputs into a single sorted output.
    
    Similar to sorted(itertools.chain(*iterables)) but returns a generator,
    does not pull the data into memory all at once, and assumes that each of
    the input streams is already sorted (smallest to largest).
    
    >>> list(merge([1,3,5,7], [0,2,4,8], [5,10,15,20], [], [25]))
    [0, 1, 2, 3, 4, 5, 5, 7, 8, 10, 15, 20, 25]

>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(timestamp=-1459451524.292371, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459451524.29237, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459451524.292362, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459451524.292361, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459451524.29236, user='davin', text='@barry no, no #vi rocks'),
 Post(timestamp=-1459451524.292358, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459451524.292357, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459451524.292353, user='davin', text='teaching #python today'),
 Post(timestamp=-1459451524.292344, user='raymondh', text='#python is the best')]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password="6\x04:\x88\xfa\x9c\xbe\x83p\xdfXq\x16'>\x03\x00\xc6uT1\nAYT\xf3\xd4\xa7\xffC\xae\xb5", joined=1459451524.276307, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='\xc28FM\xfc\x83\x0c\xe50J\xa8\xf1\x05\x97\x8d\x0c\xca]\xf7j\xb6,^C\x8az\xb1\xafC2\xcf\xf0', joined=1459451524.261552, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='B"~\x1f$\xfb\xda\xae\xbd\xe5\xc3\xa6\xf3\x8f\xe9\xdej\xd9\xffS\xe9\x1d\x8e\x84zC\x14q\xa8\xd2\xc6\x82', joined=1459451524.244511, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(timestamp=-1459451524.29237, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459451524.292357, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459451524.292344, user='raymondh', text='#python is the best')]
>>> posts_for_user('davin')
[Post(timestamp=-1459451524.29237, user='raymondh', text='#python tip: always use namedtuples'), Post(timestamp=-1459451524.292361, user='barry', text='@davin but #emacs can do anything'), Post(timestamp=-1459451524.292358, user='barry', text='it is fun to use #emacs'), Post(timestamp=-1459451524.292357, user='raymondh', text='#python news:  pypy5.0 released today'), Post(timestamp=-1459451524.292344, user='raymondh', text='#python is the best')]
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(timestamp=-1459451559.490783, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459451559.490782, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459451559.490781, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459451559.49078, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459451559.490776, user='davin', text='@barry no, no #vi rocks'),
 Post(timestamp=-1459451559.490775, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459451559.490774, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459451559.490773, user='davin', text='teaching #python today'),
 Post(timestamp=-1459451559.490757, user='raymondh', text='#python is the best')]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password=']\x90\xb2\xd2\x1d6J\xb7|JT\x0fQ\xc0\xb0\xa4pw\xd9\xa9\x92\xd8h\xf3Fa\x98\xe1l^5?', joined=1459451559.476796, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='\n\xa6\xbb\x1a\x10b\xf5\xa5F\x9b\x96]\xef\\\x9e\xa5\x13\\<\xdfJ\xe5\xabA\x96\x80\xe7\x97g\xb0h\xd5', joined=1459451559.463229, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='\xbcq\xa3\x82M\xabJq\xef\xbe2/\x8a\xbd\xba\xd4\xc5\xf7 lE\xff\xd7\xd5\xde\xfc\xd9\xb4\xbe\x10!\xeb', joined=1459451559.446483, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(timestamp=-1459451559.490782, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459451559.490774, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459451559.490757, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459451559.490782, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459451559.49078, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459451559.490775, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459451559.490774, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459451559.490757, user='raymondh', text='#python is the best')]
>>> posts_for_user('davin')
[Post(timestamp=-1459451559.490782, user='raymondh', text='#python tip: always use namedtuples'), Post(timestamp=-1459451559.49078, user='barry', text='@davin but #emacs can do anything'), Post(timestamp=-1459451559.490775, user='barry', text='it is fun to use #emacs'), Post(timestamp=-1459451559.490774, user='raymondh', text='#python news:  pypy5.0 released today'), Post(timestamp=-1459451559.490757, user='raymondh', text='#python is the best')]

>>> 
>>> 
>>> 
>>> data = [
	(10, 'Tired'),
	(1, 'Fresh'),
	(5, 'Wearing down'),
	(2, 'Ramping up'),
]
>>> pprint(sorted(data))
[(1, 'Fresh'), (2, 'Ramping up'), (5, 'Wearing down'), (10, 'Tired')]
>>> pprint(sorted(data), width=25)
[(1, 'Fresh'),
 (2, 'Ramping up'),
 (5, 'Wearing down'),
 (10, 'Tired')]
>>> data = [
	(-10, 'Tired'),
	(-1, 'Fresh'),
	(-5, 'Wearing down'),
	(-2, 'Ramping up'),
]
>>> pprint(sorted(data), width=25)
[(-10, 'Tired'),
 (-5, 'Wearing down'),
 (-2, 'Ramping up'),
 (-1, 'Fresh')]
>>> 
>>> 
>>> 
>>> help(sorted)
Help on built-in function sorted in module __builtin__:

sorted(...)
    sorted(iterable, cmp=None, key=None, reverse=False) --> new sorted list

>>> help(merge)
Help on function merge in module heapq:

merge(*iterables)
    Merge multiple sorted inputs into a single sorted output.
    
    Similar to sorted(itertools.chain(*iterables)) but returns a generator,
    does not pull the data into memory all at once, and assumes that each of
    the input streams is already sorted (smallest to largest).
    
    >>> list(merge([1,3,5,7], [0,2,4,8], [5,10,15,20], [], [25]))
    [0, 1, 2, 3, 4, 5, 5, 7, 8, 10, 15, 20, 25]

>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(timestamp=-1459452395.236705, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459452395.236704, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452395.236703, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459452395.236702, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459452395.236701, user='davin', text='@barry no, no #vi rocks'),
 Post(timestamp=-1459452395.2367, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459452395.236699, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459452395.236697, user='davin', text='teaching #python today'),
 Post(timestamp=-1459452395.236688, user='raymondh', text='#python is the best')]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='p\xea\x85\xc5AO@\xe3*\x18\x81r\x88|\xea\xf0\x11\xc7\xb4O\x91\x0bO\xbb\xcb6\xc4`W\xf9\xfa\x1f', joined=1459452395.220964, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='\x7f\x93\xef\xe4\xdc\xa1\xean\xf4n\x14\x181\x82?\x92\x1c\xfb#x\xb5\xc9\xc7;\xab+)\x8a\x01\x16\x1e\xa6', joined=1459452395.204719, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='\xb5\x0c\x18\xe4\xddS\xf1\x85\xc2\xd33\t\xfai\x9b\xa2P#\xc0\x93\x99#>xGY\x959e\x0f\xd4\xdc', joined=1459452395.187757, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(timestamp=-1459452395.236704, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452395.236699, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459452395.236688, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459452395.236704, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452395.236702, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459452395.2367, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459452395.236699, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459452395.236688, user='raymondh', text='#python is the best')]

Traceback (most recent call last):
  File "/Users/raymond/Dropbox/Public/sj139/pubsub_session.py", line 39, in <module>
    pprint(lastest_posts(limit=5))
NameError: name 'lastest_posts' is not defined
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(timestamp=-1459452409.926131, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459452409.92613, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452409.926125, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459452409.926123, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459452409.926122, user='davin', text='@barry no, no #vi rocks'),
 Post(timestamp=-1459452409.92612, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459452409.926119, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459452409.926115, user='davin', text='teaching #python today'),
 Post(timestamp=-1459452409.926106, user='raymondh', text='#python is the best')]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\xff :IN\x08o$M_\x17\x9e\xd7\x8a\x1a)\xa7\xb5g"\xcc\xdc\x8eVO\x19X\xf8R\xe7\xcd\x9e', joined=1459452409.909629, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='\x1d\x0b\x1a\x18d\xa0\xa2\x14\x1d\xb1\x9aNd\xc5\x97\x87\xea\xce\x02\xf8\x0eI\x87l\xac\xe8b\x1bN\x98*6', joined=1459452409.894658, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='\xeb\x1cD\x920\xe4\xdbSYI\x1fL\x9d\xfaV\x9b<z\xef\x80\xe7f\x93\xd6\xd5\xcd\xe8<c\xc3\x98"', joined=1459452409.877976, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(timestamp=-1459452409.92613, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452409.926119, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459452409.926106, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459452409.92613, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452409.926123, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459452409.92612, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459452409.926119, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459452409.926106, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459452409.926131, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459452409.92613, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452409.926125, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459452409.926123, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459452409.926122, user='davin', text='@barry no, no #vi rocks')]
>>> 
>>> 
>>> 
>>> 'happy' in 'shiny happy people holding hands'
True
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(timestamp=-1459452792.852004, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459452792.852004, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452792.852001, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459452792.852, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459452792.851999, user='davin', text='@barry no, no #vi rocks'),
 Post(timestamp=-1459452792.851997, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459452792.851995, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459452792.851993, user='davin', text='teaching #python today'),
 Post(timestamp=-1459452792.851983, user='raymondh', text='#python is the best')]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\x923\xf5~\xc7\xbc\xe8\rtlt\xc0\xef\xff\x90^\x97\xa6C\x14HJ\x82\x14\xb9d\x9fw\x9f\x86)b', joined=1459452792.832473, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='O\x9c\xf1\xa6\xd5\x83\x19"}]\xef\xfef\x1a0g\xdd\x8c\xf9@\x9cyZ\xb1\xd8\xec]\xb3\xff\xdev\\', joined=1459452792.814968, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='k\x8c\\\x10\xf5$\xe2\x18y\xfa\xf3\xfd{\x06\x98\x19\xcc\xe6\x1a\xe6\xf1Sa\xf0\xe3\x97DH\xe1\x06\xabu', joined=1459452792.799353, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(timestamp=-1459452792.852004, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452792.851995, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459452792.851983, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459452792.852004, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452792.852, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459452792.851997, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459452792.851995, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459452792.851983, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459452792.852004, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459452792.852004, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452792.852001, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459452792.852, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459452792.851999, user='davin', text='@barry no, no #vi rocks')]
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(timestamp=-1459452801.944191, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459452801.94419, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452801.944188, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459452801.944187, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459452801.944186, user='davin', text='@barry no, no #vi rocks'),
 Post(timestamp=-1459452801.944184, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459452801.944182, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459452801.94418, user='davin', text='teaching #python today'),
 Post(timestamp=-1459452801.944169, user='raymondh', text='#python is the best')]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\xcd9\xcb&&\xf4\xc4\x84Szb\xe49\xf9\x8b\x86\x91\x0b\x10\xb2\rl\xb0c\x08x\xcc(b+\x9d\xb7', joined=1459452801.925983, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='>\xe5\x80HT-\x99H\x0b\xf3\xfb\xab\x809\xcb\xceU\xfb%\xd5\x9b]\x9e\xa2Z\xbd\x97\xbf\xd0\xb4\xec\xba', joined=1459452801.910448, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password="\xa2\x16\x8b\xf2|\xdf\xf2)\xcd\xad\xe2n\xddX\x89,\xa3>\xda{\xb8\x01\xdc\xb7\xb9bE\t'k\x9b@", joined=1459452801.89377, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(timestamp=-1459452801.94419, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452801.944182, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459452801.944169, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459452801.94419, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452801.944187, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459452801.944184, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459452801.944182, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459452801.944169, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459452801.944191, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459452801.94419, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452801.944188, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459452801.944187, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459452801.944186, user='davin', text='@barry no, no #vi rocks')]
>>> 
>>> 
>>> search('emacs')
Post(timestamp=-1459452801.944187, user='barry', text='@davin but #emacs can do anything')
Post(timestamp=-1459452801.944184, user='barry', text='it is fun to use #emacs')
>>> search('python')
Post(timestamp=-1459452801.94419, user='raymondh', text='#python tip: always use namedtuples')
Post(timestamp=-1459452801.944182, user='raymondh', text='#python news:  pypy5.0 released today')
Post(timestamp=-1459452801.94418, user='davin', text='teaching #python today')
Post(timestamp=-1459452801.944169, user='raymondh', text='#python is the best')
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(timestamp=-1459452878.278792, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459452878.278791, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452878.278789, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459452878.278787, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459452878.278786, user='davin', text='@barry no, no #vi rocks'),
 Post(timestamp=-1459452878.278785, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459452878.278784, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459452878.278782, user='davin', text='teaching #python today'),
 Post(timestamp=-1459452878.278771, user='raymondh', text='#python is the best')]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\x0cIW\x03\x85\x9e\xa9JL\xb8\x1d\xbbn{\x90u\xb0\x10\x8d8sD\x9c"\xb2\xdc\x835Vx9R', joined=1459452878.264058, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='9\x14q\x13\xce\xad\x1e\x0eA\xdc\xb6V\x86\xf7WRq\x89\xd3!\x90\x00yU\xa4\xd1\xb9`m\x9a\xb7t', joined=1459452878.248961, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='\xa27\xccI\xd42\xc8\xeb\x15\xbd8\xa2\x19\xa1U\x14M:z\x80\xdco)\xc8\xa5%\x89\xa0\xa8\x8a\x81%', joined=1459452878.231797, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(timestamp=-1459452878.278791, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452878.278784, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459452878.278771, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459452878.278791, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452878.278787, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459452878.278785, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459452878.278784, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459452878.278771, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459452878.278792, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459452878.278791, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452878.278789, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459452878.278787, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459452878.278786, user='davin', text='@barry no, no #vi rocks')]
>>> search('python')
[Post(timestamp=-1459452878.278791, user='raymondh', text='#python tip: always use namedtuples'), Post(timestamp=-1459452878.278784, user='raymondh', text='#python news:  pypy5.0 released today'), Post(timestamp=-1459452878.278782, user='davin', text='teaching #python today'), Post(timestamp=-1459452878.278771, user='raymondh', text='#python is the best')]
>>> 
>>> search('emacs')
[Post(timestamp=-1459452878.278787, user='barry', text='@davin but #emacs can do anything'), Post(timestamp=-1459452878.278785, user='barry', text='it is fun to use #emacs')]
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(timestamp=-1459452913.612704, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459452913.612703, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452913.612701, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459452913.6127, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459452913.612699, user='davin', text='@barry no, no #vi rocks'),
 Post(timestamp=-1459452913.612697, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459452913.612695, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459452913.612687, user='davin', text='teaching #python today'),
 Post(timestamp=-1459452913.612677, user='raymondh', text='#python is the best')]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='B\x89\xce_$\xc9\xc9\x10\x05\xd8\xbf)*\x12\x19Dn}\xd9\x1a\xb8\x86\x8f\x16\xff\x80\x87f\xcc57\x19', joined=1459452913.59593, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password="`\x04\x8dZ\x95\xee\xf1{\x1d\xd4\xd5E\xd77p\x81\xf6\xb0\x89\x0f\xe9\x05\x17\x1ah'\xa1\xc0\xfco\xad\xa4", joined=1459452913.581461, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password=' }33\xa9Z>\xa8\x17\x88]9\xce\xff\xa2\xa2\xfa\xa1\xe8\xf5|\r\x82\xb4V\\\xfb\xd4\xd9\x04\xb8\xa2', joined=1459452913.565101, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(timestamp=-1459452913.612703, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452913.612695, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459452913.612677, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459452913.612703, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452913.6127, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459452913.612697, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459452913.612695, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459452913.612677, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459452913.612704, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459452913.612703, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452913.612701, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459452913.6127, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459452913.612699, user='davin', text='@barry no, no #vi rocks')]
>>> search('emacs')
[Post(timestamp=-1459452913.6127, user='barry', text='@davin but #emacs can do anything'), Post(timestamp=-1459452913.612697, user='barry', text='it is fun to use #emacs')]
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(timestamp=-1459452947.21009, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459452947.210089, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452947.210087, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459452947.210086, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459452947.210084, user='davin', text='@barry no, no #vi rocks'),
 Post(timestamp=-1459452947.210083, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459452947.210082, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459452947.21008, user='davin', text='teaching #python today'),
 Post(timestamp=-1459452947.210069, user='raymondh', text='#python is the best')]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='d\x1e\x83\x93\xb5\x12oZ?-avo\x0e\x8e"f\xe3~f\xb6dW\x85|\x85m\x98\x82N\xbf\xe4', joined=1459452947.194782, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='N\x9c\xf7\xf9lEmV\x0cH\xdfJ7@\x8e\x1a\x9a\xe6c\xc1CY\x8b\x92:xO+\x13H/k', joined=1459452947.179852, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='\xd6\x8f\xdc\x99\x10]E\xd6\xb2_\x04\xdb\xb5\x02\xe7;\xff#\x05\x1b?\x8a\xdcF\x1bQ\x8a\x07o(\xd5\r', joined=1459452947.163981, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(timestamp=-1459452947.210089, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452947.210082, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459452947.210069, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459452947.210089, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452947.210086, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459452947.210083, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459452947.210082, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459452947.210069, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459452947.21009, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459452947.210089, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459452947.210087, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459452947.210086, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459452947.210084, user='davin', text='@barry no, no #vi rocks')]
>>> 
>>> 
>>> 
>>> search('emacs')
[Post(timestamp=-1459452947.210086, user='barry', text='@davin but #emacs can do anything'), Post(timestamp=-1459452947.210083, user='barry', text='it is fun to use #emacs')]
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(timestamp=-1459453088.713401, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459453088.7134, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453088.713399, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459453088.713396, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453088.713395, user='davin', text='@barry no, no #vi rocks'),
 Post(timestamp=-1459453088.713394, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459453088.713393, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453088.713389, user='davin', text='teaching #python today'),
 Post(timestamp=-1459453088.71338, user='raymondh', text='#python is the best')]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\x16\x7fR\xbfe\x1feVt|\xe1w0\xd8\xb4\x13\xd8Yp\x82&\xb0\x8f.\xf4\x02$\xb4P\xf6\x13\xbc', joined=1459453088.697093, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='\x8bf\x15\x84\xeaN+HL\x98\xdf\x11\xcd\x0b\xe6\xd4\x01\x8eO\xfdy\xa3\xbbh\xf9s\xed\x05j\xc1U\x8d', joined=1459453088.68233, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='w\x14\x9e\xbf\xa2w\xda\x18\xf5?K\xc4}\x86{Z\x99\xe8\xf8\xbam\xe9\x81\xfdy\xdfx\xeb\xce<t\x12', joined=1459453088.665668, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(timestamp=-1459453088.7134, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453088.713393, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453088.71338, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459453088.7134, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453088.713396, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453088.713394, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459453088.713393, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453088.71338, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459453088.713401, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459453088.7134, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453088.713399, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459453088.713396, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453088.713395, user='davin', text='@barry no, no #vi rocks')]
>>> get_followers('barry')
['davin']
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(timestamp=-1459453124.129234, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459453124.129233, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453124.129231, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459453124.129229, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453124.129228, user='davin', text='@barry no, no #vi rocks'),
 Post(timestamp=-1459453124.129226, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459453124.129225, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453124.129222, user='davin', text='teaching #python today'),
 Post(timestamp=-1459453124.129212, user='raymondh', text='#python is the best')]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\xd9\xfb\x1f+\x9d+F\xdaz\xf0\x88B\xe3\xcb\x98\xeb}\xad\xea]Et\x98\x9b]QV\xa2\x9a\xf08\x7f', joined=1459453124.113532, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='E\x8d6\x94{.\xa8\xd0l\xd6\xb4\x9dm\x86\xd8R\xb4\xf7\xcea\xc7\ry\xd2\xaf*\x8a\x17\x06][\xe0', joined=1459453124.099148, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='`\xde\x90\xb5\x14D\xc0H\xb8\xa0\x077\xce\xe3p\xa2\x8e\xde\xfe-bm\xafW\xd9\xb5\xb1\xd6\x88\xa8\x19\xc7', joined=1459453124.082455, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(timestamp=-1459453124.129233, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453124.129225, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453124.129212, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459453124.129233, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453124.129229, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453124.129226, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459453124.129225, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453124.129212, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459453124.129234, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459453124.129233, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453124.129231, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459453124.129229, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453124.129228, user='davin', text='@barry no, no #vi rocks')]
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(timestamp=-1459453150.861172, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459453150.861171, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453150.861169, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459453150.861167, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453150.861166, user='davin', text='@barry no, no #vi rocks'),
 Post(timestamp=-1459453150.861165, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459453150.861164, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453150.86116, user='davin', text='teaching #python today'),
 Post(timestamp=-1459453150.861152, user='raymondh', text='#python is the best')]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\xf6\xba\xee\xc0_\xa9`\x11\\\xb7\xd9\x01\x95\xb4\xcd\x98\x11\xfb\x8a\xc8y_\x7f\xc4\xbfp\xb0\xec]\x9b\xa2B', joined=1459453150.844502, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='\xe9 \x1ez&rW\x98\xbd\xe5\xb9\xea\xfdn\xb69\xa3\xe2\xbc\xd0\x07\xf8N\xe3\xde\x0eu\xef\x0f\xe7\xb0z', joined=1459453150.829176, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='\x7f\xa3\x80\x9eB\x8f=J\xba6k\xa1Z]\xf0\xaae\x03n~2\xff\xb7\x97W]\xa0M\xaf\xe6\xc1\xe4', joined=1459453150.812359, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(timestamp=-1459453150.861171, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453150.861164, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453150.861152, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459453150.861171, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453150.861167, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453150.861165, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459453150.861164, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453150.861152, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459453150.861172, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459453150.861171, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453150.861169, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459453150.861167, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453150.861166, user='davin', text='@barry no, no #vi rocks')]
>>> who_follows('raymondh')
[]
>>> who_follows('davin')
['barry', 'raymondh']
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(timestamp=-1459453194.33875, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459453194.338749, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453194.338748, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459453194.338747, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453194.338746, user='davin', text='@barry no, no #vi rocks'),
 Post(timestamp=-1459453194.338739, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459453194.338738, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453194.338736, user='davin', text='teaching #python today'),
 Post(timestamp=-1459453194.338728, user='raymondh', text='#python is the best')]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='P\xad\x94\xc0\x1bV8\x9f\r\xa9\x987\x1f\xbc3\xc8=NDp\x1b\x87p\xa2f\xf0\xb6\x1a\xeck\xf2\xd5', joined=1459453194.320084, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='\xed\xbe\xfeo-L9\xf4\xdco\xcf2\xf7\xf5x\x8c\xc9\xb9G\x0e\xc9\xb7=A\x0c\xbe\xc4\x15Z\xf0\xc6x', joined=1459453194.304765, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='\xc0\xde\x18t\x88\x0e1#\xd0\x9bV\xfa\xb3\x15\xd3\x00m\x01aMz\xf4F\xe8\x8fI\xb8\x8b\xfb\x86\xdeD', joined=1459453194.287572, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(timestamp=-1459453194.338749, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453194.338738, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453194.338728, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459453194.338749, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453194.338747, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453194.338739, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459453194.338738, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453194.338728, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459453194.33875, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459453194.338749, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453194.338748, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459453194.338747, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453194.338746, user='davin', text='@barry no, no #vi rocks')]
>>> followers
defaultdict(<type 'set'>, {'barry': set(['davin']), 'raymondh': set(['davin'])})
>>> who_follows('raymondh')
['davin']
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(timestamp=-1459453288.389214, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459453288.389213, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453288.389212, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459453288.389209, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453288.389208, user='davin', text='@barry no, no #vi rocks'),
 Post(timestamp=-1459453288.389207, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459453288.389206, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453288.389202, user='davin', text='teaching #python today'),
 Post(timestamp=-1459453288.389193, user='raymondh', text='#python is the best')]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\xc7\xfeg\xb6I\xb6x\xbe\xb7mj\x99\x0fs.?\xc5\x06 \xf2pc\xf7\x97gv_2\x9e\x04\x0f\xdc', joined=1459453288.372903, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='\x00tM\xd3\xf7)a\xdb\x8d\x87\x9a\xab\xce\x04\xa36\x1a\xd1\xfc\x19\xda\xd5\xecS\xc5\xda\x02C:\xca=\x96', joined=1459453288.353522, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='g<\x82\r\x8d\xf1\xd1\x15\xe9\xad`\x07\x12\x137\t\x0e\xe2\xceY\xd4,\xfb\x9d\x82\xb2~\xf7\xb4\xcf\xbd\xe8', joined=1459453288.335325, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(timestamp=-1459453288.389213, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453288.389206, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453288.389193, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459453288.389213, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453288.389209, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453288.389207, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459453288.389206, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453288.389193, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459453288.389214, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459453288.389213, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453288.389212, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459453288.389209, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453288.389208, user='davin', text='@barry no, no #vi rocks')]
>>> who_follows('raymondh')
['davin']
>>> get_followed('davin')
['barry', 'raymondh']
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(timestamp=-1459453312.674442, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459453312.674441, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453312.674439, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459453312.674438, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453312.674437, user='davin', text='@barry no, no #vi rocks'),
 Post(timestamp=-1459453312.674435, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459453312.674434, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453312.674431, user='davin', text='teaching #python today'),
 Post(timestamp=-1459453312.674422, user='raymondh', text='#python is the best')]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password="MJ\x95\xfd\x18m\xf1\xc1\xaaB#'!=\xa8\xe3\xbc\x026[\x0bo\xf7\xd6\xd1\xf0\xb9\x1b/\xe5\xe2S", joined=1459453312.659518, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='\xea\xa3\x0e\rC\xcd\x1c33\xa2\xe5\xd4g-$\x06\xe2\x88i\x08\xcd\x16~{\xbc\xb8\x97\xfd\xa4\x15\x07`', joined=1459453312.645386, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='\x18\t\x80+&6}\x98\x82Du\xa1(L\xedyU\xf1\xe4\x00\x8f\xb3\xcfi\xd0i:~;\x1d3\xb4', joined=1459453312.629208, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(timestamp=-1459453312.674441, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453312.674434, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453312.674422, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459453312.674441, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453312.674438, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453312.674435, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459453312.674434, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453312.674422, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459453312.674442, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459453312.674441, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453312.674439, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459453312.674438, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453312.674437, user='davin', text='@barry no, no #vi rocks')]
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(timestamp=-1459453363.993503, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459453363.993503, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453363.993501, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459453363.9935, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453363.993499, user='davin', text='@barry no, no #vi rocks'),
 Post(timestamp=-1459453363.993497, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459453363.993496, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453363.993495, user='davin', text='teaching #python today'),
 Post(timestamp=-1459453363.993485, user='raymondh', text='#python is the best')]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\xeb5+\xb5\x90\xf6\xa8\x11;!\xef\xee\xaa\xe0\xa9^\xc6)\xfbM=\x9b|\xda\xdcy\xd8\x80\x14L\x89\x1b', joined=1459453363.97791, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='4G\x8a\x7f\xe1A\xd1H\xbb\xed\xd0\x8c\xd4|U\x80\xb3\xa3\xc3\xeb)\x87M=6\x90Ng\xaf\xee\x8c\xe6', joined=1459453363.963336, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='\x85\x18 24\xd1\x99Cb \x12\xc8\xc5Z\x15@\x13\x1e\xdePnj}SU2\xe0\xfa\xd1\xa2}\x9d', joined=1459453363.94632, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(timestamp=-1459453363.993503, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453363.993496, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453363.993485, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459453363.993503, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453363.9935, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453363.993497, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459453363.993496, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453363.993485, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459453363.993503, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459453363.993503, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453363.993501, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459453363.9935, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453363.993499, user='davin', text='@barry no, no #vi rocks')]
['barry', 'raymondh']
['davin']
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(timestamp=-1459453405.124426, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459453405.124425, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453405.124423, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459453405.124422, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453405.124421, user='davin', text='@barry no, no #vi rocks'),
 Post(timestamp=-1459453405.12442, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459453405.124419, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453405.124417, user='davin', text='teaching #python today'),
 Post(timestamp=-1459453405.124408, user='raymondh', text='#python is the best')]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='{Pj\xb3\xcf%\xa2\xdfd\xd6\x02\xbdF?\x91"\xc0\xc4`n\x91|\x8f\xeb\x0e\x82\xcf{\x84;\xfc:', joined=1459453405.106917, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='5\xf1\xba=\xa8<\x14X*\xc9\xc0\xc4i\xb2\xaa\xa8\x18\xb1p4\xe5\xc2\xd0\tA\x0c6\x90ho8\xcd', joined=1459453405.089315, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='\xf5\x13\xb2\x0f~\xbf\x14"\x94\xac\xd6K\x8e`drbK\xcd\x8d\xc8\xbc\x00\xbf\xb3\xa52\x8f\xee\xf9u\x07', joined=1459453405.071892, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(timestamp=-1459453405.124425, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453405.124419, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453405.124408, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459453405.124425, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453405.124422, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453405.12442, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459453405.124419, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453405.124408, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459453405.124426, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459453405.124425, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453405.124423, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459453405.124422, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453405.124421, user='davin', text='@barry no, no #vi rocks')]
['barry', 'raymondh']
['davin']
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(timestamp=-1459453433.976036, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459453433.976034, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453433.976033, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459453433.976032, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453433.976031, user='davin', text='@barry no, no #vi rocks'),
 Post(timestamp=-1459453433.976028, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459453433.976027, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453433.976025, user='davin', text='teaching #python today'),
 Post(timestamp=-1459453433.976016, user='raymondh', text='#python is the best')]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\xec\xf9nB\x8c\x90<\xb4\xfb\xf97u\xf4\xff(\x8c\xba\x86\x81y;\xccmeZ\x10hh\xec+s\x7f', joined=1459453433.960499, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='\x13\x15Kij\x87\xfd\xff\x82\xaeS\xd7\x9a\xca>\xf973FCGz\x0c\xf9Iwg\xf5K]\xac\xc0', joined=1459453433.943447, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='T\n\x06#\xfd\xf2#\xfc\xed\xbcF^\xa4\xe2\xdf\x99\xf2\x83ea\xda\x1b]\x99\xc2\x11\x92\xd9N;f\x8e', joined=1459453433.925673, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(timestamp=-1459453433.976034, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453433.976027, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453433.976016, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459453433.976034, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453433.976032, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453433.976028, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459453433.976027, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459453433.976016, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459453433.976036, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459453433.976034, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459453433.976033, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459453433.976032, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459453433.976031, user='davin', text='@barry no, no #vi rocks')]
['barry', 'raymondh']
['davin']
UserInfo(displayname='Davin Potts', email='davin@appliomics.com', hashed_password='\x13\x15Kij\x87\xfd\xff\x82\xaeS\xd7\x9a\xca>\xf973FCGz\x0c\xf9Iwg\xf5K]\xac\xc0', joined=1459453433.943447, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None)
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======

Traceback (most recent call last):
  File "/Users/raymond/Dropbox/Public/sj139/pubsub_session.py", line 23, in <module>
    set_user('raymondh', password='Batman456')       # XXX make sure we can update the accounts
TypeError: set_user() takes at least 3 arguments (2 given)
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(timestamp=-1459455357.293673, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459455357.293672, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459455357.29367, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459455357.293669, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459455357.293668, user='davin', text='@barry no, no #vi rocks'),
 Post(timestamp=-1459455357.293666, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459455357.293664, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459455357.293663, user='davin', text='teaching #python today'),
 Post(timestamp=-1459455357.293653, user='raymondh', text='#python is the best')]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\xb3\x0e\xd01\xf4\xc02\xb6j1m\xe4\xf7\xbat\xc4}JR\xc9c\xa7\x06\xa1\xbf\xfc\xef\x08Dr\x96\x81', joined=1459455357.277205, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davinator', email='davin@appliomics.com', hashed_password='\x0e\x90\xc8\rJq\x92\xaac\\3\xda$\xa9Q\x80\xe2\x1b\x9a\xf1$\xe4&K\x98\x89\x88\t:\xb0\xbd$', joined=1459455357.258221, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='s\xcc\xed9\x1e\x9d\xc8U\xb5\xc2\xf6go\xf3\xff\xbbs-\xf5\x03gw&\x8c\xf5i\xac\x16\xdc\x8c/\xa2', joined=1459455357.240458, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(timestamp=-1459455357.293672, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459455357.293664, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459455357.293653, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459455357.293672, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459455357.293669, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459455357.293666, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459455357.293664, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459455357.293653, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459455357.293673, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459455357.293672, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459455357.29367, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459455357.293669, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459455357.293668, user='davin', text='@barry no, no #vi rocks')]
['barry', 'raymondh']
['davin']
UserInfo(displayname='Davinator', email='davin@appliomics.com', hashed_password='\x0e\x90\xc8\rJq\x92\xaac\\3\xda$\xa9Q\x80\xe2\x1b\x9a\xf1$\xe4&K\x98\x89\x88\t:\xb0\xbd$', joined=1459455357.258221, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None)
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(timestamp=-1459455593.724978, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459455593.724977, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459455593.724969, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459455593.724968, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459455593.724967, user='davin', text='@barry no, no #vi rocks'),
 Post(timestamp=-1459455593.724966, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459455593.724964, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459455593.724963, user='davin', text='teaching #python today'),
 Post(timestamp=-1459455593.724954, user='raymondh', text='#python is the best')]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\xc4\xe7\x84\xa8C\xacS\x16qv\xfc6Vw\xfe\xd3u\xca\xbe\xb2\x0eH\n\xfdb\x81y\xcd\xc1]5u', joined=1459455593.708602, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davinator', email='davin@appliomics.com', hashed_password="0e$M\x95n\xa4x\x0eg4\xb2'\x06\xfd\xa5\xbb\x836\x9a\xc6j*\x80\xfcW\x17\x90\x00-\xae$", joined=1459455593.692742, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password="\xce\xa98\xc9\x83\xd5B\xd94wkm\x0e%T\x1c\xb5S\x9e\n\x89@\x80&\x02\x93\x8f\xf3X6'm", joined=1459455593.676218, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(timestamp=-1459455593.724977, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459455593.724964, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459455593.724954, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459455593.724977, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459455593.724968, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459455593.724966, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459455593.724964, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459455593.724954, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459455593.724978, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459455593.724977, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459455593.724969, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459455593.724968, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459455593.724967, user='davin', text='@barry no, no #vi rocks')]
['barry', 'raymondh']
['davin']
UserInfo(displayname='Davinator', email='davin@appliomics.com', hashed_password="0e$M\x95n\xa4x\x0eg4\xb2'\x06\xfd\xa5\xbb\x836\x9a\xc6j*\x80\xfcW\x17\x90\x00-\xae$", joined=1459455593.692742, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None)
>>> 
=========== RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub.py ===========
[Post(timestamp=-1459455634.835044, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459455634.835043, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459455634.835037, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459455634.835036, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459455634.835034, user='davin', text='@barry no, no #vi rocks'),
 Post(timestamp=-1459455634.835032, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459455634.835031, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459455634.83503, user='davin', text='teaching #python today'),
 Post(timestamp=-1459455634.835019, user='raymondh', text='#python is the best')]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\x8b\xbc0\xcc{&\xf4\xe3\x7f\xb6\x7f\\C\x9fn\x17\xf9\x06\n\xb4h\x1bw/\xc4o\x0e\xda\x81\x07\x97_', joined=1459455634.818593, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davinator', email='davin@appliomics.com', hashed_password='LF\x0c\x15d\xd5\xb1\x93\x81W\xd6]\x96\xb7\xf8\xf0a\xeb\x01\xc8\xecg\xab\n\x04\x8e6s\xd9Re\x0e', joined=1459455634.803168, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='\xdb[\xcf\xaf\xdd%\x80s-!\xe35\x05o\xa4Vt(\xe7\xa1{1/\x88?[\xf1\xf8\xc9}\xfd?', joined=1459455634.785518, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(timestamp=-1459455634.835043, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459455634.835031, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459455634.835019, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459455634.835043, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459455634.835036, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459455634.835032, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459455634.835031, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459455634.835019, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459455634.835044, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459455634.835043, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459455634.835037, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459455634.835036, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459455634.835034, user='davin', text='@barry no, no #vi rocks')]
['barry', 'raymondh']
['davin']
UserInfo(displayname='Davinator', email='davin@appliomics.com', hashed_password='LF\x0c\x15d\xd5\xb1\x93\x81W\xd6]\x96\xb7\xf8\xf0a\xeb\x01\xc8\xecg\xab\n\x04\x8e6s\xd9Re\x0e', joined=1459455634.803168, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None)
>>> 
======= RESTART: /Users/raymond/Dropbox/Public/sj139/pubsub_session.py =======
[Post(timestamp=-1459458737.729489, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459458737.729488, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459458737.729486, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459458737.729485, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459458737.729483, user='davin', text='@barry no, no #vi rocks'),
 Post(timestamp=-1459458737.729482, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459458737.72948, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459458737.729478, user='davin', text='teaching #python today'),
 Post(timestamp=-1459458737.729469, user='raymondh', text='#python is the best')]
{'davin': set(['barry', 'raymondh'])}
{'barry': set(['davin']), 'raymondh': set(['davin'])}
{'barry': UserInfo(displayname='Funky Barry', email='barry@python.org', hashed_password='\x010\x1e\x96\x8c\x9bD\xee\x97\xfd\x88\xb7\x16*F\x02_\x97Ph\xac\x8d\x80\x98\xc7\x97\xd3-O\x88Zp', joined=1459458737.711938, bio='Python core developer.  Musician', photo=None),
 'davin': UserInfo(displayname='Davinator', email='davin@appliomics.com', hashed_password="/\xd2\x99\xd9M\r\xfa\xb7\x8b!\x9aA-*\xd4J\xc8\xa7\x9d\xef%_\x91\x9b\r\xcf\xe1rTu\x19'", joined=1459458737.693873, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None),
 'raymondh': UserInfo(displayname='Raymondh', email='python@rcn.com', hashed_password='\xe3\xd9\xcfy\xfbf\xb3\xbfEw\x84\xd3llk\xd4W\x12\xb7\x13\xfc\x0f\x14\xd7\x8aTzD\xb7\x1c\xc23', joined=1459458737.676633, bio='Python trainer. Core Developer. Pilot. Soldier. Fashion Photographer. Familyman', photo=None)}
[Post(timestamp=-1459458737.729488, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459458737.72948, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459458737.729469, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459458737.729488, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459458737.729485, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459458737.729482, user='barry', text='it is fun to use #emacs'),
 Post(timestamp=-1459458737.72948, user='raymondh', text='#python news:  pypy5.0 released today'),
 Post(timestamp=-1459458737.729469, user='raymondh', text='#python is the best')]
[Post(timestamp=-1459458737.729489, user='davin', text='#funfact:  coriander and cilantro come from the same plant'),
 Post(timestamp=-1459458737.729488, user='raymondh', text='#python tip: always use namedtuples'),
 Post(timestamp=-1459458737.729486, user='davin', text='@barry but it turns my fingers into knots'),
 Post(timestamp=-1459458737.729485, user='barry', text='@davin but #emacs can do anything'),
 Post(timestamp=-1459458737.729483, user='davin', text='@barry no, no #vi rocks')]
['barry', 'raymondh']
['davin']
UserInfo(displayname='Davinator', email='davin@appliomics.com', hashed_password="/\xd2\x99\xd9M\r\xfa\xb7\x8b!\x9aA-*\xd4J\xc8\xa7\x9d\xef%_\x91\x9b\r\xcf\xe1rTu\x19'", joined=1459458737.693873, bio='Python trainer.  CEO of startup.  Phd in Chemistry.  Familyman', photo=None)
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 

>>> 



>>> 



>>> 











>>> 
=============================== RESTART: Shell ===============================
>>> x = 10
>>> globals()['x']
10
>>> globals()['x'] = 11
>>> x
11
>>> sorted(globals().keys())
['__builtins__', '__doc__', '__name__', '__package__', 'x']
>>> dir()
['__builtins__', '__doc__', '__name__', '__package__', 'x']
>>> 
>>> 
>>> globals() == locals()
True
>>> 
>>> 
>>> import math
>>> dir()
['__builtins__', '__doc__', '__name__', '__package__', 'math', 'x']
>>> globals()['math'].sin(3)
0.1411200080598672
>>> math.sin
<built-in function sin>
>>> math.sin(3)
0.1411200080598672
>>> def cube(x):
	return x ** 3

>>> dir()
['__builtins__', '__doc__', '__name__', '__package__', 'cube', 'math', 'x']
>>> class Computer:
	pass

>>> dir()
['Computer', '__builtins__', '__doc__', '__name__', '__package__', 'cube', 'math', 'x']
>>> cube
<function cube at 0x1006ef488>
>>> globals()['cube'](11)
1331
>>> 
>>> # Assigning words:   =   import    def    class
>>> 
>>> type(x)
<type 'int'>
>>> type(cube)
<type 'function'>
>>> type(math)
<type 'module'>
>>> type(Computer)
<type 'classobj'>
>>> 
>>> 
>>> 
>>> 
=============================== RESTART: Shell ===============================
>>> x = 10
>>> y = 20
>>> def f(x):
	z = x + y
	return z

>>> f(15)
35
>>> def f(x):
	z = x + y
	print locals()
	return z

>>> f(15)
{'x': 15, 'z': 35}
35
>>> globals()['x']
10
>>> 
>>> def f(x):
	z = x + y
	import math
	print locals()
	return z

>>> f(15)
{'x': 15, 'z': 35, 'math': <module 'math' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/math.so'>}
35
>>> def f(x):
	z = x + y
	import math
	class Router:
		pass
	print locals()
	return z

>>> f(15)
{'Router': <class __main__.Router at 0x10061e328>, 'z': 35, 'math': <module 'math' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/math.so'>, 'x': 15}
35
>>> def f(x):
	z = x + y
	import math
	class Router:
		pass
	def g(w):
		return 20
	print locals()
	return z

>>> f(15)
{'Router': <class __main__.Router at 0x1041337a0>, 'z': 35, 'math': <module 'math' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/math.so'>, 'g': <function g at 0x1006ef500>, 'x': 15}
35
>>> 
>>> 
>>> 
>>> 
>>> 
=============================== RESTART: Shell ===============================
>>> w = 10
>>> def f(x):
	def g(y):
		return w, x, y
	print g(30)

	
>>> f(20)
(10, 20, 30)
>>> # w is global       x is in a nested scope, cell variable     y is local
>>> def f(x):
	def g(y):
		print 'g:', locals()
		return w, x, y
	print 'f:', locals()
	print g(30)

	
>>> f(20)
f: {'x': 20, 'g': <function g at 0x1006ef488>}
g: {'y': 30, 'x': 20}
(10, 20, 30)
>>> # RDH: look at locals for "g"
>>> 
>>> 
>>> def f(x):
	def g(y):
		return w, x, y
	print g(30)

	
>>> def f(x):
	def g(y):
		return w, x, y
	return g

>>> h = f(20)
>>> i = f(40)
>>> j = f(60)
>>> 
>>> h(30)
(10, 20, 30)
>>> i(30)
(10, 40, 30)
>>> j(30)
(10, 60, 30)
>>> f.__class__
<type 'function'>
>>> f.__name__
'f'
>>> ff = f
>>> ff.__name__
'f'
>>> f.__doc__ is None
True
>>> f.__code__.co_code
'\x87\x00\x00f\x01\x00d\x01\x00\x86\x00\x00}\x01\x00|\x01\x00S'
>>> map(ord, f.__code__.co_code)
[135, 0, 0, 102, 1, 0, 100, 1, 0, 134, 0, 0, 125, 1, 0, 124, 1, 0, 83]
>>> 
>>> 
>>> 
>>> 
>>> def f(x):
	def g(y):
		return w, x, y
	return g

>>> h = f(20)
>>> i = f(40)
>>> j = f(60)
>>> 
>>> funcs = [h, i, j]
>>> map(type, funcs)
[<type 'function'>, <type 'function'>, <type 'function'>]
>>> [type(func) for func in funcs]
[<type 'function'>, <type 'function'>, <type 'function'>]
>>> 
>>> 


>>> 




>>> def f(x):
	def g(y):
		return w, x, y
	return g

>>> h = f(20)
>>> i = f(40)
>>> j = f(60)
>>> [type(func) for func in funcs]
[<type 'function'>, <type 'function'>, <type 'function'>]
>>> [func.__name__ for func in funcs]
['g', 'g', 'g']
>>> [func.__doc__ for func in funcs]
[None, None, None]
>>> [func.__code__.co_code for func in funcs]
['t\x00\x00\x88\x00\x00|\x00\x00f\x03\x00S', 't\x00\x00\x88\x00\x00|\x00\x00f\x03\x00S', 't\x00\x00\x88\x00\x00|\x00\x00f\x03\x00S']
>>> [func(30) for func in funcs]
[(10, 20, 30), (10, 40, 30), (10, 60, 30)]
>>> h.__closure__
(<cell at 0x1041aca98: int object at 0x10030be30>,)
>>> h.__closure__[0]
<cell at 0x1041aca98: int object at 0x10030be30>
>>> h.__closure__[0].cell_contents
20
>>> [func.__closure__[0].cell_contents for func in funcs]
[20, 40, 60]
>>> 
>>> 
>>> # What is a def-in-a-def all about?
>>> # It is used to make many functions that a identical
>>> #    with respect to type, name, docstring, and code
>>> # but that differ
>>> #    with to closure variables
>>> 
>>> #
>>> 
>>> # Inside a function there is a namespace chain:
>>> 
>>> 
>>> #    locals -> closure (locals of the nested scopes) -> globals -> builtins ->  NameError
>>> #         x            y                                  w          len()
>>> 
>>> 
>>> 
>>> 
>>> 
>>> # f.__class__  f.__name__  f.__doc__  f.__code__  f.__closure__
>>> 
>>> 
>>> [ord('R'), ord('a'), ord('y'), ord('m'), ord('o'), ord('n'), ord('d')]
[82, 97, 121, 109, 111, 110, 100]
>>> map(ord, 'Raymond')
[82, 97, 121, 109, 111, 110, 100]
>>> 
>>> t = 10+1, 20+2, 30+3
>>> t
(11, 22, 33)
>>> a, b, c = t
>>> t = [10+1, 20+2, 30+3]
>>> a, b, c = t
>>> 
>>> 
>>> a = ord('R')
>>> b = ord('a')
>>> c = ord('y')
>>> a, b, c, d, e, f, g = map(ord, 'Raymond')
>>> a
82
>>> b
97
>>> c
121
>>> d
109
>>> e
111
>>> 
>>> 
>>> 
>>> 
>>> a = pow(2, 3)
>>> a
8
>>> b = pow(2, 4)
>>> c = pow(2, 5)
>>> d = pow(2, 6)
>>> 
>>> def twopow(exp):
	pow(2, exp)

	
>>> a = twopow(3)
>>> b = twopow(4)
>>> map(twopow, range(2, 10))
[None, None, None, None, None, None, None, None]
>>> def twopow(exp):
	return pow(2, exp)

>>> 


>>> 







>>> 


>>> 











>>> def twopow(exp):
	return pow(2, exp)

>>> map(twopow, range(2, 10))
[4, 8, 16, 32, 64, 128, 256, 512]
>>> a, b, c, d, e, f, g, h = map(twopow, range(2, 10))
>>> 
>>> 
>>> 
>>> def twopow(exp):
	return pow(2, exp)

>>> a, b, c, d, e, f, g, h = map(twopow, range(2, 10))
>>> 
>>> def threepow(exp):
	return pow(3, exp)

>>> def fourpow(exp):
	return pow(4, exp)

>>> def ():
	
SyntaxError: invalid syntax
>>> def makepow(base):
	def somepow(exp):
		return pow(base, exp)
	return somepow

>>> twopow = makepow(2)
>>> threepow = makepow(3)
>>> 
>>> twopow(5)
32
>>> threepow(5)
243
>>> 
>>> 
>>> def makepow(base):
	def somepow(exp):
		return pow(base, exp)
	return somepow

>>> twopow, threepow, fourpow, fivepow, sixpow, sevenpow, eightpow = map(makepow, range(2, 9))
>>> 
>>> 
>>> funcs = map(makepow, range(2, 9))
>>> [type(func) for func in funcs]
[<type 'function'>, <type 'function'>, <type 'function'>, <type 'function'>, <type 'function'>, <type 'function'>, <type 'function'>]
>>> [func.__name__ for func in funcs]
['somepow', 'somepow', 'somepow', 'somepow', 'somepow', 'somepow', 'somepow']
>>> [func.__doc__ for func in funcs]
[None, None, None, None, None, None, None]
>>> [func.__code__.co_code for func in funcs]
['t\x00\x00\x88\x00\x00|\x00\x00\x83\x02\x00S', 't\x00\x00\x88\x00\x00|\x00\x00\x83\x02\x00S', 't\x00\x00\x88\x00\x00|\x00\x00\x83\x02\x00S', 't\x00\x00\x88\x00\x00|\x00\x00\x83\x02\x00S', 't\x00\x00\x88\x00\x00|\x00\x00\x83\x02\x00S', 't\x00\x00\x88\x00\x00|\x00\x00\x83\x02\x00S', 't\x00\x00\x88\x00\x00|\x00\x00\x83\x02\x00S']
>>> [func.__closure__[0].cell_contents for func in funcs]
[2, 3, 4, 5, 6, 7, 8]
>>> 
>>> 
>>> 
>>> import math
>>> x = 3
>>> 
>>> y = math.cos(x)
>>> 
>>> orig_cos = math.cos
>>> def visible_cos(x):
	print 'cos() was called with %r' % x
	answer = orig_cos(x)
	print 'the answer is %r' % answer
	return answer

>>> math.cos = visible_cos
>>> 
>>> y = math.cos(x)
cos() was called with 3
the answer is -0.9899924966004454
>>> 
>>> y = math.sin(x)
>>> 
>>> orig_sin = math.sin
>>> def visible_sin(x):
	print 'sin() was called with %r' % x
	answer = orig_sin(x)
	print 'the answer is %r' % answer
	return answer

>>> math.sin = visible_sin
>>> y = math.cos(x)
cos() was called with 3
the answer is -0.9899924966004454
>>> y = math.sin(x)
sin() was called with 3
the answer is 0.1411200080598672
>>> import math
>>> dir(math)
['__doc__', '__file__', '__name__', '__package__', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atan2', 'atanh', 'ceil', 'copysign', 'cos', 'cosh', 'degrees', 'e', 'erf', 'erfc', 'exp', 'expm1', 'fabs', 'factorial', 'floor', 'fmod', 'frexp', 'fsum', 'gamma', 'hypot', 'isinf', 'isnan', 'ldexp', 'lgamma', 'log', 'log10', 'log1p', 'modf', 'pi', 'pow', 'radians', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc']
>>> 
>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/decorator_school.py ======
>>> math.cos = make_visible(math.cos)
>>> math.sin = make_visible(math.sin)
>>> math.tan = make_visible(math.tan)
>>> y = math.cos(3)
cos() was called with 3
the answer is -0.9899924966004454
>>> y = math.sin(3)
sin() was called with 3
the answer is 0.1411200080598672
>>> y = math.tan(3)
tan() was called with 3
the answer is -0.1425465430742778
>>> 
>>> 
>>> square(10)
100
>>> cube(10)
1000
>>> collatz(10)
5
>>> collatz(5)
16
>>> big_func(10)
Doing hard work
11
>>> 
>>> y = square(10)
>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/decorator_school.py ======
>>> y = square(10)
square() was called with 10
the answer is 100
>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/decorator_school.py ======
>>> y = square(10)
square() was called with 10
the answer is 100
>>> y = cube(10)
cube() was called with 10
the answer is 1000
>>> y = collatz(10)
collatz() was called with 10
the answer is 5
>>> 
>>> 
>>> 
>>> ord('a')
97
>>> map(ord, 'Raymond')
[82, 97, 121, 109, 111, 110, 100]
>>> pow(2, 5)
32
>>> map(pow, [2, 2, 2, 2, 2], range(1, 6))
[2, 4, 8, 16, 32]
>>> map(pow, [2]*5, range(1, 6))
[2, 4, 8, 16, 32]
>>> from itertools import *
>>> it = imap(pow, [2]*5, range(1, 6))
>>> next(it)
2
>>> next(it)
4
>>> it = imap(pow, repeat(2, 5), range(1, 6))
>>> next(it)
2
>>> it = imap(pow, repeat(2), range(1, 6))
>>> list(it)
[2, 4, 8, 16, 32]
>>> range(1, 6)
[1, 2, 3, 4, 5]
>>> it = imap(pow, repeat(2), xrange(1, 6))
>>> sum(imap(pow, repeat(2), xrange(1, 6)))
62
>>> sum(imap(pow, repeat(2), xrange(1, 10000)))

>>> 
>>> 
>>> #  [obj] * n               repeat(obj, n)
>>> #  map(func, seq)          imap(func, seq)
>>> #    ^-- list versions      ^-- iterator versions
>>> 
>>> 
>>> data = [(2, 5), (3, 4), (5, 8)]
>>> list(starmap(pow, data))
[32, 81, 390625]
>>> 
>>> list(imap(pow, [2, 3, 5], [5, 4, 8]))
[32, 81, 390625]
>>> list(starmap(pow, [(2, 5), (3, 4), (5, 8)]))
[32, 81, 390625]
>>> from itertools import imap, repeat, starmap
>>> 
>>> 
>>> 
>>> t = (10, 5*4, 6*5)
>>> u = (2*5, 20, 30)
>>> t
(10, 20, 30)
>>> u
(10, 20, 30)
>>> t == u
True
>>> t is u
False
>>> 
>>> 
>>> canonical = {}                # map cn -> cn
>>> def myintern(obj):
	if obj in canonical:
		return canonical[obj]
	canonical[obj] = obj
	return obj

>>> t = myintern(t)
>>> canonical
{(10, 20, 30): (10, 20, 30)}
>>> u = myintern(u)
>>> u is t
True
>>> 
>>> s = 'hello'
>>> t = 'HELLO'.lower()
>>> s == t
True
>>> hex(id(s))
'0x10391e810'
>>> hex(id(t))
'0x1038cfea0'
>>> t = intern(s)
>>> # Mathematics:  equivalence class    canonical examples of that class
>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/decorator_school.py ======
>>> y = square(10)
square() was called with (10,)
the answer is 100
>>> pow = make_visible(pow)
>>> pow(2, 5)
pow() was called with (2, 5)
the answer is 32
32
>>> def f(a, b, c, d=10, e=20):
	return a + e + 50

>>> type(f)
<type 'function'>
>>> dir(f)
['__call__', '__class__', '__closure__', '__code__', '__defaults__', '__delattr__', '__dict__', '__doc__', '__format__', '__get__', '__getattribute__', '__globals__', '__hash__', '__init__', '__module__', '__name__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'func_closure', 'func_code', 'func_defaults', 'func_dict', 'func_doc', 'func_globals', 'func_name']
>>> co = f.__code__
>>> f.__defaults__
(10, 20)
>>> dir(co)
['__class__', '__cmp__', '__delattr__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__le__', '__lt__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'co_argcount', 'co_cellvars', 'co_code', 'co_consts', 'co_filename', 'co_firstlineno', 'co_flags', 'co_freevars', 'co_lnotab', 'co_name', 'co_names', 'co_nlocals', 'co_stacksize', 'co_varnames']
>>> co.co_nlocals
5
>>> co.co_names
()
>>> co.co_name
'f'
>>> co.co_consts
(None, 50)
>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/decorator_school.py ======
>>> choice = raw_input('Choose a game: ')
Choose a game: GlobalThermonuclearWar
>>> 
>>> choice
'GlobalThermonuclearWar'
>>> # War Games
>>> 
>>> 
>>> s = 'co cu sq'
>>> s.split()
['co', 'cu', 'sq']
>>> 
>>> 
>>> dispatch = {}
>>> dispatch['sq'] = square
>>> dispatch
{'sq': <function visible_math at 0x1006ef050>}
>>> dispatch['sq'](5)
square() was called with (5,)
the answer is 25
25
>>> 
>>> 
>>> def add_to_dispatch(shortname, func):
	dispatch[shortname] = func
	return func

>>> add_to_dispatch('cu', cube)
<function visible_math at 0x1038687d0>
>>> dispatch
{'sq': <function visible_math at 0x1006ef050>, 'cu': <function visible_math at 0x1038687d0>}
>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/decorator_school.py ======
>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/decorator_school.py ======
>>> dispatch
{}
>>> register('sq')
<function inner at 0x103868aa0>
>>> dispatch
{}
>>> square = register('sq')(square)
>>> dispatch
{'sq': <function visible_math at 0x103868140>}
>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/decorator_school.py ======
>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/decorator_school.py ======
>>> pprint(dispatch)
{'co': <function collatz at 0x103875230>,
 'cu': <function cube at 0x103875140>,
 'ha': <function halve at 0x103875320>,
 'sq': <function square at 0x103875050>}
>>> 
>>> 
>>> dispatch['ha'](40)
20
>>> dispatch['cu'](5)
125
>>> program = '15 ha cu co'
>>> fields = program.split()
>>> x = int(fields[0])
>>> fields[1:]
['ha', 'cu', 'co']
>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/decorator_school.py ======
>>> interpreter()
Enter a program: 10 sq co co cu ha ha ha sq
10 --(sq)--> 100
--(co)--> 50
--(co)--> 25
--(cu)--> 15625
--(ha)--> 7812
--(ha)--> 3906
--(ha)--> 1953
--(sq)--> 3814209

>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/decorator_school.py ======
>>> interpreter()
Enter a program: 5 cu co co co sq
5 --(cu)--> 125 --(co)--> 376 --(co)--> 188 --(co)--> 94 --(sq)--> 8836
>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/decorator_school.py ======
>>> big_func(10)
big_func() was called with (10,)
Doing hard work
the answer is 11
11
>>> big_func(20)
big_func() was called with (20,)
Doing hard work
the answer is 21
21
>>> big_func(10)
big_func() was called with (10,)
Doing hard work
the answer is 11
11
>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/decorator_school.py ======
>>> big_func(10)
Doing hard work
11
>>> big_func(20)
Doing hard work
21
>>> bf_answers
{10: 11, 20: 21}
>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/decorator_school.py ======
>>> big_func(10)
Doing hard work
11
>>> big_func(20)
Doing hard work
21
>>> big_func(10)
11
>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/decorator_school.py ======
>>> square(10)
100
>>> square(12)
144
>>> sq_answers
{10: 100, 12: 144}
>>> bf_answers
{}
>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/decorator_school.py ======
>>> big_func(10)
inner() was called with (10,)
Doing hard work
the answer is 11
11
>>> big_func(20)
inner() was called with (20,)
Doing hard work
the answer is 21
21
>>> big_func(10)
inner() was called with (10,)
the answer is 11
11
>>> big_func(20)
inner() was called with (20,)
the answer is 21
21
>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/decorator_school.py ======
>>> big_func(10)
big_func() was called with (10,)
Doing hard work
the answer is 11
11
>>> big_func(20)
big_func() was called with (20,)
Doing hard work
the answer is 21
21
>>> big_func(10)
11
>>> square(10)
inner() was called with (10,)
the answer is 100
100
>>> square(20)
inner() was called with (20,)
the answer is 400
400
>>> square(10)
inner() was called with (10,)
the answer is 100
100
>>> big_func.__closure__
(<cell at 0x1038e7e88: dict object at 0x10395da28>, <cell at 0x1038e7ec0: function object at 0x103974500>)
>>> big_func.__closure__[0].items()

Traceback (most recent call last):
  File "<pyshell#576>", line 1, in <module>
    big_func.__closure__[0].items()
AttributeError: 'cell' object has no attribute 'items'
>>> big_func.__closure__[0].cell_contents.items()
[(10, 11), (20, 21)]
>>> square.__closure__[0]
<cell at 0x1038e7d00: function object at 0x1039741b8>
>>> square.__closure__[0].__closure__[0]

Traceback (most recent call last):
  File "<pyshell#579>", line 1, in <module>
    square.__closure__[0].__closure__[0]
AttributeError: 'cell' object has no attribute '__closure__'
>>> square.__closure__[0]
<cell at 0x1038e7d00: function object at 0x1039741b8>
>>> square.__closure__
(<cell at 0x1038e7d00: function object at 0x1039741b8>,)
>>> square.__closure__[0].cell_contents.__name__
'inner'
>>> square.__closure__[0].cell_contents.__closure__[0].cell_contents
{10: 100, 20: 400}
>>> 
>>> 
>>> square.__closure__[0].cell_contents.__closure__[0].cell_contents
{10: 100, 20: 400}
>>> big_func.__closure__[0].cell_contents.items()
[(10, 11), (20, 21)]
>>> import bottle
>>> # BetterSnapTool <- App Store
>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/rest_api_server.py ======
Bottle v0.12.9 server starting up (using WSGIRefServer())...
Listening on http://localhost:8080/
Hit Ctrl-C to quit.


Traceback (most recent call last):
  File "/Users/raymond/Dropbox/Public/sj139/rest_api_server.py", line 4, in <module>
    run(host='localhost', port=8080, debug=True)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/bottle.py", line 3117, in run
    server.run(app)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/bottle.py", line 2771, in run
    srv = make_server(self.host, self.port, app, server_cls, handler_cls)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/wsgiref/simple_server.py", line 151, in make_server
    server = server_class((host, port), handler_class)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 420, in __init__
    self.server_bind()
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/wsgiref/simple_server.py", line 48, in server_bind
    HTTPServer.server_bind(self)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/BaseHTTPServer.py", line 108, in server_bind
    SocketServer.TCPServer.server_bind(self)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 434, in server_bind
    self.socket.bind(self.server_address)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/socket.py", line 228, in meth
    return getattr(self._sock,name)(*args)
error: [Errno 48] Address already in use
>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/rest_api_server.py ======
Bottle v0.12.9 server starting up (using WSGIRefServer())...
Listening on http://localhost:8081/
Hit Ctrl-C to quit.

127.0.0.1 - - [31/Mar/2016 16:51:35] "GET / HTTP/1.1" 404 720
127.0.0.1 - - [31/Mar/2016 16:52:15] "GET / HTTP/1.1" 404 720
127.0.0.1 - - [31/Mar/2016 16:53:30] "GET / HTTP/1.1" 404 720

====== RESTART: /Users/raymond/Dropbox/Public/sj139/rest_api_server.py ======
Bottle v0.12.9 server starting up (using WSGIRefServer())...
Listening on http://localhost:8081/
Hit Ctrl-C to quit.


====== RESTART: /Users/raymond/Dropbox/Public/sj139/rest_api_server.py ======
Bottle v0.12.9 server starting up (using WSGIRefServer())...
Listening on http://localhost:8081/
Hit Ctrl-C to quit.

127.0.0.1 - - [31/Mar/2016 16:57:07] "GET / HTTP/1.1" 200 6
127.0.0.1 - - [31/Mar/2016 16:57:23] "GET / HTTP/1.1" 200 6
>>> import time
>>> time.time()
1459468670.434803
>>> time.ctime()
'Thu Mar 31 16:57:59 2016'
>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/rest_api_server.py ======
Bottle v0.12.9 server starting up (using WSGIRefServer())...
Listening on http://localhost:8081/
Hit Ctrl-C to quit.

127.0.0.1 - - [31/Mar/2016 16:58:42] "GET / HTTP/1.1" 200 6
127.0.0.1 - - [31/Mar/2016 16:58:48] "GET /now HTTP/1.1" 200 24
127.0.0.1 - - [31/Mar/2016 16:58:51] "GET /now HTTP/1.1" 200 24
127.0.0.1 - - [31/Mar/2016 16:58:57] "GET /now HTTP/1.1" 200 24
127.0.0.1 - - [31/Mar/2016 16:59:42] "GET /now HTTP/1.1" 200 24

====== RESTART: /Users/raymond/Dropbox/Public/sj139/rest_api_server.py ======
Bottle v0.12.9 server starting up (using WSGIRefServer())...
Listening on http://localhost:8081/
Hit Ctrl-C to quit.

127.0.0.1 - - [31/Mar/2016 17:00:22] "GET /now HTTP/1.1" 200 24
127.0.0.1 - - [31/Mar/2016 17:00:34] "GET /now HTTP/1.1" 200 24
127.0.0.1 - - [31/Mar/2016 17:01:07] "GET / HTTP/1.1" 200 6

====== RESTART: /Users/raymond/Dropbox/Public/sj139/rest_api_server.py ======
Bottle v0.12.9 server starting up (using WSGIRefServer())...
Listening on http://localhost:8081/
Hit Ctrl-C to quit.

127.0.0.1 - - [31/Mar/2016 17:01:23] "GET / HTTP/1.1" 200 17
127.0.0.1 - - [31/Mar/2016 17:01:36] "GET / HTTP/1.1" 200 17
127.0.0.1 - - [31/Mar/2016 17:01:39] "GET /now HTTP/1.1" 200 24
127.0.0.1 - - [31/Mar/2016 17:01:50] "GET /now HTTP/1.1" 200 24
127.0.0.1 - - [31/Mar/2016 17:01:52] "GET /now HTTP/1.1" 200 24
127.0.0.1 - - [31/Mar/2016 17:01:54] "GET /now HTTP/1.1" 200 24
127.0.0.1 - - [31/Mar/2016 17:01:57] "GET /now HTTP/1.1" 200 24
127.0.0.1 - - [31/Mar/2016 17:01:59] "GET /now HTTP/1.1" 200 24
127.0.0.1 - - [31/Mar/2016 17:02:07] "GET /now HTTP/1.1" 200 24
127.0.0.1 - - [31/Mar/2016 17:02:08] "GET /now HTTP/1.1" 200 24
127.0.0.1 - - [31/Mar/2016 17:02:09] "GET /now HTTP/1.1" 200 24
127.0.0.1 - - [31/Mar/2016 17:02:10] "GET /now HTTP/1.1" 200 24

====== RESTART: /Users/raymond/Dropbox/Public/sj139/rest_api_server.py ======
Bottle v0.12.9 server starting up (using WSGIRefServer())...
Listening on http://localhost:8081/
Hit Ctrl-C to quit.

127.0.0.1 - - [31/Mar/2016 17:04:16] "GET /now HTTP/1.1" 200 24
127.0.0.1 - - [31/Mar/2016 17:04:21] "GET /now HTTP/1.1" 200 24
127.0.0.1 - - [31/Mar/2016 17:04:34] "GET /now HTTP/1.1" 200 24
127.0.0.1 - - [31/Mar/2016 17:04:36] "GET /now HTTP/1.1" 200 24
127.0.0.1 - - [31/Mar/2016 17:04:38] "GET /now HTTP/1.1" 200 24
>>> 
>>> 
>>> 
>>> 
>>> import subprocess
>>> s = subprocess.check_output(['netstat', '-i'])
>>> type(s)
<type 'str'>
>>> print s[:300]
Name  Mtu   Network       Address            Ipkts Ierrs    Opkts Oerrs  Coll
lo0   16384 <Link#1>                       2911722     0  2911722     0     0
lo0   16384 localhost   ::1                2911722     -  2911722     -     -
lo0   16384 127           localhost        2911722     -  2911722 
>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/rest_api_server.py ======
Bottle v0.12.9 server starting up (using WSGIRefServer())...
Listening on http://localhost:8081/
Hit Ctrl-C to quit.

127.0.0.1 - - [31/Mar/2016 17:10:55] "GET /interfaces HTTP/1.1" 200 1248
127.0.0.1 - - [31/Mar/2016 17:12:07] "GET /interfaces HTTP/1.1" 200 1248

====== RESTART: /Users/raymond/Dropbox/Public/sj139/rest_api_server.py ======
Bottle v0.12.9 server starting up (using WSGIRefServer())...
Listening on http://localhost:8081/
Hit Ctrl-C to quit.

127.0.0.1 - - [31/Mar/2016 17:12:45] "GET /interfaces HTTP/1.1" 200 1248

====== RESTART: /Users/raymond/Dropbox/Public/sj139/rest_api_server.py ======
Bottle v0.12.9 server starting up (using WSGIRefServer())...
Listening on http://localhost:8081/
Hit Ctrl-C to quit.

127.0.0.1 - - [31/Mar/2016 17:17:52] "GET /area/circle?radius=10 HTTP/1.1" 200 4
>>> 
>>> 
>>> d = dict(raymond='red')
>>> d['raymond']
'red'
>>> d['rachel']

Traceback (most recent call last):
  File "<pyshell#605>", line 1, in <module>
    d['rachel']
KeyError: 'rachel'
>>> 
>>> d.get('rachel', 'azure')
'azure'
>>> d.get('raymond', 'azure')
'red'
>>> s = '10'
>>> int(s)
10
>>> float(s)
10.0
>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/rest_api_server.py ======
Bottle v0.12.9 server starting up (using WSGIRefServer())...
Listening on http://localhost:8081/
Hit Ctrl-C to quit.

10.0
127.0.0.1 - - [31/Mar/2016 17:19:56] "GET /area/circle?radius=10 HTTP/1.1" 200 4
0.0
127.0.0.1 - - [31/Mar/2016 17:20:08] "GET /area/circle?rad=10 HTTP/1.1" 200 4

====== RESTART: /Users/raymond/Dropbox/Public/sj139/rest_api_server.py ======
Bottle v0.12.9 server starting up (using WSGIRefServer())...
Listening on http://localhost:8081/
Hit Ctrl-C to quit.

10.0 --> 314.152
127.0.0.1 - - [31/Mar/2016 17:21:59] "GET /area/circle?radius=10 HTTP/1.1" 200 4

====== RESTART: /Users/raymond/Dropbox/Public/sj139/rest_api_server.py ======
Bottle v0.12.9 server starting up (using WSGIRefServer())...
Listening on http://localhost:8081/
Hit Ctrl-C to quit.

127.0.0.1 - - [31/Mar/2016 17:22:53] "GET /area/circle?radius=10 HTTP/1.1" 200 17

====== RESTART: /Users/raymond/Dropbox/Public/sj139/rest_api_server.py ======
Bottle v0.12.9 server starting up (using WSGIRefServer())...
Listening on http://localhost:8081/
Hit Ctrl-C to quit.

127.0.0.1 - - [31/Mar/2016 17:23:23] "GET /area/circle?radius=10 HTTP/1.1" 200 33

====== RESTART: /Users/raymond/Dropbox/Public/sj139/rest_api_server.py ======
Bottle v0.12.9 server starting up (using WSGIRefServer())...
Listening on http://localhost:8081/
Hit Ctrl-C to quit.

127.0.0.1 - - [31/Mar/2016 17:23:52] "GET /area/circle?radius=10 HTTP/1.1" 200 60



>>> dict(radius=10, area=314.14)
{'radius': 10, 'area': 314.14}
>>> 
>>> radius=10
>>> area=314.14
>>> dict(radius=radius, area=area, service='compute_area')
{'radius': 10, 'service': 'compute_area', 'area': 314.14}
>>> float('3.14')
3.14
>>> float('3.14x')

Traceback (most recent call last):
  File "<pyshell#618>", line 1, in <module>
    float('3.14x')
ValueError: invalid literal for float(): 3.14x
>>> 
====== RESTART: /Users/raymond/Dropbox/Public/sj139/rest_api_server.py ======
Bottle v0.12.9 server starting up (using WSGIRefServer())...
Listening on http://localhost:8081/
Hit Ctrl-C to quit.

127.0.0.1 - - [31/Mar/2016 17:28:10] "GET /area/circle?radius=10 HTTP/1.1" 200 70

====== RESTART: /Users/raymond/Dropbox/Public/sj139/rest_api_server.py ======
Bottle v0.12.9 server starting up (using WSGIRefServer())...
Listening on http://localhost:8081/
Hit Ctrl-C to quit.

127.0.0.1 - - [31/Mar/2016 17:29:37] "GET /interfaces HTTP/1.1" 200 1248
>>> 
>>> 
